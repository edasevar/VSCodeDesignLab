{"version":3,"file":"webview.js","mappings":"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","sources":["webpack://vsc-design-lab/./media/webview.ts"],"sourcesContent":["\"use strict\";\nconst vscode = acquireVsCodeApi();\nlet model = {\n    colors: {},\n    tokenColors: [],\n    semanticTokens: {},\n};\nlet categories = [];\nwindow.addEventListener(\"message\", (e) => {\n    const { type, payload } = e.data;\n    if (type === \"BOOT\") {\n        categories = payload.categories || [];\n        const current = payload.settings || {};\n        // If user wants to start from current\n        model.colors = current.colors || {};\n        model.tokenColors = current.tokenColors?.textMateRules || [];\n        model.semanticTokens = current.semanticTokens?.rules || {};\n        renderAll();\n    }\n    if (type === \"LOAD_CURRENT\" || type === \"LOAD_IMPORTED\") {\n        model.colors = payload.colors || {};\n        model.tokenColors = payload.tokenColors || [];\n        model.semanticTokens = payload.semanticTokens || {};\n        renderAll();\n        pushPreview();\n    }\n    if (type === \"LOCATE\")\n        pulse(payload?.elementId);\n});\nfunction pulse(id) {\n    if (!id)\n        return;\n    const el = document.getElementById(id);\n    if (!el)\n        return;\n    el.classList.add(\"locate-pulse\");\n    setTimeout(() => el.classList.remove(\"locate-pulse\"), 1000);\n}\nfunction renderAll() {\n    renderColors();\n    renderTokens();\n    renderSemantic();\n    renderPreviewDemos();\n}\nfunction inputRow(label, key, description) {\n    const id = `color-${key}`;\n    const v = model.colors[key] || \"\";\n    const alpha = alphaFromHex(v);\n    return `\r\n    <div class=\"row\">\r\n      <div class=\"row-head\">\r\n        <strong>${label}</strong>\r\n        <button data-locate=\"${key}\" title=\"Locate in Preview\">Locate</button>\r\n      </div>\r\n      <div class=\"row-body\">\r\n        <input type=\"color\" data-key=\"${key}\" value=\"${coerceHex(v)}\" />\r\n\t\t<input type=\"text\" data-key=\"${key}\" value=\"${v}\" placeholder=\"#RRGGBB or #RRGGBBAA\"/>\r\n\t\t<input type=\"range\" min=\"0\" max=\"100\" step=\"1\" data-alpha-key=\"${key}\" value=\"${alpha}\" title=\"Alpha ${alpha}%\"/>\r\n        <span class=\"desc\">${description || \"\"}</span>\r\n      </div>\r\n    </div>`;\n}\nfunction coerceHex(s) {\n    // fallback to #000000 if invalid\n    return /^#([0-9a-f]{6}|[0-9a-f]{8})$/i.test(s)\n        ? `#${s.replace(\"#\", \"\").slice(0, 6)}`\n        : \"#000000\";\n}\nfunction renderColors() {\n    const root = document.getElementById(\"panel-colors\");\n    root.innerHTML = categories\n        .map((c) => `\r\n    <section>\r\n      <h4>${c.name}</h4>\r\n      ${c.items\n        .map((it) => inputRow(it.key, it.key, it.description || \"\"))\n        .join(\"\")}\r\n    </section>\r\n  `)\n        .join(\"\");\n    root\n        .querySelectorAll('input[type=\"color\"], input[type=\"text\"]')\n        .forEach((el) => {\n        el.addEventListener(\"input\", handleColorInput);\n    });\n    root\n        .querySelectorAll('input[type=\"range\"][data-alpha-key]')\n        .forEach((el) => el.addEventListener(\"input\", handleAlphaInput));\n    root.querySelectorAll(\"button[data-locate]\").forEach((btn) => {\n        btn.addEventListener(\"click\", () => {\n            const key = btn.dataset.locate;\n            vscode.postMessage({\n                type: \"LOCATE\",\n                payload: { elementId: demoIdForKey(key) },\n            });\n        });\n    });\n}\nfunction handleColorInput(ev) {\n    const t = ev.target;\n    const key = t.dataset.key;\n    let val = t.value.trim();\n    const parent = t.parentElement;\n    const textInput = parent.querySelector('input[type=\"text\"][data-key=\"' + key + '\"]');\n    const colorInput = parent.querySelector('input[type=\"color\"][data-key=\"' + key + '\"]');\n    const alphaInput = parent.querySelector('input[type=\"range\"][data-alpha-key=\"' + key + '\"]');\n    if (t.type === \"color\") {\n        // preserve existing alpha from text input if present\n        const base6 = val; // #RRGGBB\n        const aPct = alphaFromHex(textInput?.value || \"\");\n        const merged = mergeHexWithAlpha(base6, aPct);\n        textInput.value = merged;\n        alphaInput.value = String(aPct);\n        val = merged;\n    }\n    else if (t.type === \"text\") {\n        // sync color and alpha controls from text\n        if (/^#[0-9a-f]{6}([0-9a-f]{2})?$/i.test(val)) {\n            colorInput.value = coerceHex(val);\n            alphaInput.value = String(alphaFromHex(val));\n        }\n    }\n    model.colors[key] = val;\n    pushPreview();\n    // auto-locate in preview when editing a color\n    vscode.postMessage({\n        type: \"LOCATE\",\n        payload: { elementId: demoIdForKey(key) },\n    });\n}\nfunction handleAlphaInput(ev) {\n    const t = ev.target; // range\n    const key = t.dataset.alphaKey;\n    const parent = t.parentElement;\n    const colorInput = parent.querySelector('input[type=\"color\"][data-key=\"' + key + '\"]');\n    const textInput = parent.querySelector('input[type=\"text\"][data-key=\"' + key + '\"]');\n    const aPct = clampPct(parseInt(t.value, 10));\n    const merged = mergeHexWithAlpha(colorInput.value, aPct);\n    textInput.value = merged;\n    model.colors[key] = merged;\n    pushPreview();\n    // auto-locate in preview when changing alpha\n    vscode.postMessage({\n        type: \"LOCATE\",\n        payload: { elementId: demoIdForKey(key) },\n    });\n}\nfunction clampPct(n) {\n    return isFinite(n) ? Math.min(100, Math.max(0, n)) : 100;\n}\nfunction alphaFromHex(v) {\n    const m = /^#[0-9a-f]{6}([0-9a-f]{2})$/i.exec(v);\n    if (!m)\n        return 100;\n    const aa = parseInt(m[1], 16);\n    return Math.round((aa / 255) * 100);\n}\nfunction mergeHexWithAlpha(base6, alphaPct) {\n    const hex6 = coerceHex(base6).replace(\"#\", \"\");\n    const a = clampPct(alphaPct);\n    const aa = Math.round((a / 100) * 255)\n        .toString(16)\n        .padStart(2, \"0\");\n    return `#${hex6}${aa}`;\n}\nfunction renderTokens() {\n    const root = document.getElementById(\"panel-tokens\");\n    const rows = model.tokenColors.map((r, idx) => tokenRow(r, idx)).join(\"\");\n    root.innerHTML = `\r\n\t\t<button id=\"add-token\">Add Rule</button>\r\n    <div>${rows}</div>`;\n    document.getElementById(\"add-token\").addEventListener(\"click\", () => {\n        model.tokenColors.push({ scope: \"\", settings: {} });\n        renderTokens();\n        pushPreview();\n    });\n    root.querySelectorAll(\"[data-token-edit]\").forEach((el) => el.addEventListener(\"input\", (e) => {\n        const t = e.target;\n        const idx = Number(t.dataset.index);\n        const field = t.dataset.field;\n        if (field === \"scope\")\n            model.tokenColors[idx].scope = t.value;\n        if (field === \"fg\")\n            model.tokenColors[idx].settings.foreground = t.value;\n        if (field === \"fs\")\n            model.tokenColors[idx].settings.fontStyle = t.value;\n        pushPreview();\n        vscode.postMessage({ type: \"LOCATE\", payload: { elementId: \"demo-editor\" } });\n    }));\n    root.querySelectorAll(\"[data-token-remove]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        const i = Number(e.currentTarget.dataset.index);\n        model.tokenColors.splice(i, 1);\n        renderTokens();\n        pushPreview();\n        vscode.postMessage({ type: \"LOCATE\", payload: { elementId: \"demo-editor\" } });\n    }));\n    root.querySelectorAll(\"[data-fs]\").forEach((cb) => cb.addEventListener(\"change\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const val = t.value;\n        const cur = (model.tokenColors[i].settings.fontStyle || \"\")\n            .split(/\\s+/)\n            .filter(Boolean);\n        const set = new Set(cur);\n        if (t.checked)\n            set.add(val);\n        else\n            set.delete(val);\n        model.tokenColors[i].settings.fontStyle = Array.from(set).join(\" \") || undefined;\n        pushPreview();\n        vscode.postMessage({ type: \"LOCATE\", payload: { elementId: \"demo-editor\" } });\n    }));\n}\nfunction tokenRow(r, idx) {\n    const fs = (r.settings.fontStyle || \"\").split(/\\s+/).filter(Boolean);\n    const has = (k) => fs.includes(k);\n    return `<div class=\"row\">\r\n\t\t<label>scope</label><input data-token-edit data-index=\"${idx}\" data-field=\"scope\" value=\"${Array.isArray(r.scope) ? r.scope.join(\", \") : r.scope || \"\"}\" />\r\n    <label>foreground</label><input data-token-edit data-index=\"${idx}\" data-field=\"fg\" value=\"${r.settings.foreground || \"\"}\" />\r\n\t\t<fieldset style=\"display:inline-flex;gap:6px;border:none;padding:0;margin:0\">\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"bold\" ${has(\"bold\") ? \"checked\" : \"\"}/> bold</label>\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"italic\" ${has(\"italic\") ? \"checked\" : \"\"}/> italic</label>\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"underline\" ${has(\"underline\") ? \"checked\" : \"\"}/> underline</label>\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"strikethrough\" ${has(\"strikethrough\") ? \"checked\" : \"\"}/> strikethrough</label>\r\n\t\t</fieldset>\r\n\t\t<button data-token-remove data-index=\"${idx}\">Remove</button>\r\n  </div>`;\n}\nfunction renderSemantic() {\n    const root = document.getElementById(\"panel-semantic\");\n    const entries = Object.entries(model.semanticTokens);\n    root.innerHTML = `\r\n    <button id=\"add-sem\">Add Semantic</button>\r\n    <div>${entries.map(([sel, s], i) => semRow(sel, s, i)).join(\"\")}</div>`;\n    document.getElementById(\"add-sem\").addEventListener(\"click\", () => {\n        model.semanticTokens[\"entity.name.new\"] = {};\n        renderSemantic();\n        pushPreview();\n    });\n    root.querySelectorAll(\"[data-sem]\").forEach((el) => el.addEventListener(\"input\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        if (t.dataset.field === \"selector\") {\n            const val = t.value;\n            const cur = model.semanticTokens[sel];\n            delete model.semanticTokens[sel];\n            model.semanticTokens[val] = cur;\n        }\n        else if (t.dataset.field === \"fg\") {\n            model.semanticTokens[sel].foreground = t.value;\n        }\n        else if (t.dataset.field === \"fs\") {\n            model.semanticTokens[sel].fontStyle = t.value;\n        }\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-sem-remove]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        const i = Number(e.currentTarget.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        delete model.semanticTokens[sel];\n        renderSemantic();\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-sem-fs]\").forEach((cb) => cb.addEventListener(\"change\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        const cur = (model.semanticTokens[sel].fontStyle || \"\")\n            .split(/\\s+/)\n            .filter(Boolean);\n        const set = new Set(cur);\n        if (t.checked)\n            set.add(t.value);\n        else\n            set.delete(t.value);\n        model.semanticTokens[sel].fontStyle = Array.from(set).join(\" \") || undefined;\n        pushPreview();\n    }));\n}\nfunction semRow(sel, s, i) {\n    const fs = (s.fontStyle || \"\").split(/\\s+/).filter(Boolean);\n    const has = (k) => fs.includes(k);\n    return `<div class=\"row\">\r\n    <label>selector</label><input data-sem data-index=\"${i}\" data-field=\"selector\" value=\"${sel}\"/>\r\n    <label>foreground</label><input data-sem data-index=\"${i}\" data-field=\"fg\" value=\"${s.foreground || \"\"}\"/>\r\n\t\t<fieldset style=\"display:inline-flex;gap:6px;border:none;padding:0;margin:0\">\r\n\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"bold\" ${has(\"bold\") ? \"checked\" : \"\"}/> bold</label>\r\n\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"italic\" ${has(\"italic\") ? \"checked\" : \"\"}/> italic</label>\r\n\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"underline\" ${has(\"underline\") ? \"checked\" : \"\"}/> underline</label>\r\n\t\t</fieldset>\r\n\t\t<button data-sem-remove data-index=\"${i}\">Remove</button>\r\n  </div>`;\n}\nfunction renderPreviewDemos() {\n    const root = document.getElementById(\"preview\");\n    root.innerHTML = getDemosHtml();\n    // clicking preview tabs\n    document.querySelectorAll(\".ptab\").forEach((b) => b.addEventListener(\"click\", () => {\n        document\n            .querySelectorAll(\".ptab\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        b.classList.add(\"active\");\n        const id = b.dataset.demo;\n        document\n            .querySelectorAll(\".demo\")\n            .forEach((x) => (x.style.display = \"none\"));\n        document.getElementById(\"demo-\" + id).style.display = \"block\";\n    }));\n}\nfunction pushPreview() {\n    vscode.postMessage({ type: \"APPLY_PREVIEW\", payload: model });\n}\n// Map color key to demo element id\nfunction demoIdForKey(key) {\n    if (key.startsWith(\"statusBar\"))\n        return \"demo-statusbar\";\n    if (key.startsWith(\"panel\") || key.startsWith(\"panelSection\"))\n        return \"demo-panels\";\n    if (key.startsWith(\"terminal\"))\n        return \"demo-terminal\";\n    if (key.startsWith(\"problems\"))\n        return \"demo-problems\";\n    if (key.startsWith(\"tab.\") || key.startsWith(\"editorGroupHeader\"))\n        return \"demo-lists\";\n    return \"demo-editor\";\n}\n// Minimal demos\nfunction getDemosHtml() {\n    return `\r\n  <section class=\"demo\" id=\"demo-editor\" style=\"display:block\">\r\n    <div id=\"editor\" contenteditable=\"true\" style=\"min-height:220px;padding:8px;border:1px solid var(--vscode-editorWidget-border)\">\r\n      // active line, selections, cursor, hover, indent guides, etc.\r\n      function demo() { console.log('Hello theme'); }\r\n    </div>\r\n  </section>\r\n  <section class=\"demo\" id=\"demo-panels\" style=\"display:none\"><div>Panels</div></section>\r\n  <section class=\"demo\" id=\"demo-problems\" style=\"display:none\"><div>Problems list</div></section>\r\n  <section class=\"demo\" id=\"demo-terminal\" style=\"display:none\"><div>Terminal</div></section>\r\n  <section class=\"demo\" id=\"demo-notifications\" style=\"display:none\"><div>Notifications</div></section>\r\n  <section class=\"demo\" id=\"demo-statusbar\" style=\"display:none\"><div>Status Bar</div></section>\r\n  <section class=\"demo\" id=\"demo-lists\" style=\"display:none\"><div>Lists/Tabs</div></section>`;\n}\n// boot\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Toolbar wiring\n    const byId = (id) => document.getElementById(id);\n    byId(\"btn-import\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_IMPORT\" }));\n    byId(\"btn-use\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_USE_CURRENT\" }));\n    byId(\"btn-blank\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_START_BLANK\" }));\n    byId(\"btn-export-json\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_JSON\" }));\n    byId(\"btn-export-css\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_CSS\" }));\n    byId(\"btn-export-vsix\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_VSIX\" }));\n    document.querySelectorAll(\".tab\").forEach((t) => t.addEventListener(\"click\", () => {\n        document\n            .querySelectorAll(\".tab\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        t.classList.add(\"active\");\n        const id = t.dataset.tab;\n        document\n            .querySelectorAll(\".panel\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        document.getElementById(\"panel-\" + id).classList.add(\"active\");\n    }));\n    const search = document.getElementById(\"search\");\n    search.addEventListener(\"input\", () => {\n        const q = search.value.toLowerCase();\n        document.querySelectorAll(\"#panel-colors section\").forEach((section) => {\n            let any = false;\n            section.querySelectorAll(\".row\").forEach((row) => {\n                const txt = row.textContent?.toLowerCase() || \"\";\n                const show = txt.includes(q);\n                row.style.display = show ? \"\" : \"none\";\n                if (show)\n                    any = true;\n            });\n            section.style.display = any ? \"\" : \"none\";\n        });\n        // tokens filter\n        document.querySelectorAll(\"#panel-tokens .row\").forEach((row) => {\n            const txt = row.textContent?.toLowerCase() || \"\";\n            row.style.display = txt.includes(q) ? \"\" : \"none\";\n        });\n        // semantic filter\n        document.querySelectorAll(\"#panel-semantic .row\").forEach((row) => {\n            const txt = row.textContent?.toLowerCase() || \"\";\n            row.style.display = txt.includes(q) ? \"\" : \"none\";\n        });\n    });\n    vscode.postMessage({ type: \"REQUEST_BOOT\" });\n});\n"],"names":["vscode","acquireVsCodeApi","model","colors","tokenColors","semanticTokens","categories","renderAll","root","document","getElementById","innerHTML","map","c","name","items","it","label","key","description","v","alpha","alphaFromHex","coerceHex","inputRow","join","querySelectorAll","forEach","el","addEventListener","handleColorInput","handleAlphaInput","btn","dataset","locate","postMessage","type","payload","elementId","demoIdForKey","renderColors","renderTokens","renderSemantic","b","x","classList","remove","add","id","demo","style","display","s","test","replace","slice","ev","t","target","val","value","trim","parent","parentElement","textInput","querySelector","colorInput","alphaInput","base6","aPct","merged","mergeHexWithAlpha","String","pushPreview","alphaKey","clampPct","parseInt","n","isFinite","Math","min","max","m","exec","aa","round","alphaPct","hex6","a","toString","padStart","rows","r","idx","fs","settings","fontStyle","split","filter","Boolean","has","k","includes","Array","isArray","scope","foreground","tokenRow","push","e","Number","index","field","i","currentTarget","splice","cb","cur","set","Set","checked","delete","from","undefined","entries","Object","sel","semRow","keys","startsWith","window","data","current","textMateRules","rules","setTimeout","pulse","byId","tab","search","q","toLowerCase","section","any","row","show","textContent","txt"],"sourceRoot":""}