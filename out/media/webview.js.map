{"version":3,"file":"webview.js","mappings":"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","sources":["webpack://vsc-design-lab/./media/webview.ts"],"sourcesContent":["\"use strict\";\n// restored state placeholder\nlet restoredModel;\nlet restoredUI;\nconst vscode = acquireVsCodeApi();\n// try restore\ntry {\n    const saved = vscode.getState && vscode.getState();\n    if (saved && saved.model) {\n        restoredModel = saved.model;\n    }\n    if (saved && saved.ui) {\n        restoredUI = saved.ui;\n    }\n}\ncatch { }\nlet model = {\n    colors: {},\n    tokenColors: [],\n    semanticTokens: {},\n};\n// Debounce state for preview updates\nlet previewTimer;\nconst PREVIEW_DEBOUNCE_MS = 120;\nlet lastPreviewSnapshot;\nconst historyStack = [];\nconst redoStack = [];\nlet lastHistoryTs = 0;\nconst HISTORY_MIN_INTERVAL_MS = 500;\nlet baselineSnapshot;\nconst deepClone = (x) => JSON.parse(JSON.stringify(x));\nconst recordHistory = () => {\n    const now = Date.now();\n    if (now - lastHistoryTs < HISTORY_MIN_INTERVAL_MS)\n        return;\n    historyStack.push(deepClone(model));\n    // cap history to 50 entries\n    if (historyStack.length > 50)\n        historyStack.shift();\n    // new edits invalidate redo\n    redoStack.length = 0;\n    lastHistoryTs = now;\n    updateUndoRedoButtons();\n};\nconst undo = () => {\n    if (!historyStack.length)\n        return;\n    redoStack.push(deepClone(model));\n    const prev = historyStack.pop();\n    model = deepClone(prev);\n    renderAll();\n    pushPreview();\n    updateUndoRedoButtons();\n};\nconst redo = () => {\n    if (!redoStack.length)\n        return;\n    historyStack.push(deepClone(model));\n    const next = redoStack.pop();\n    model = deepClone(next);\n    renderAll();\n    pushPreview();\n    updateUndoRedoButtons();\n};\nfunction updateUndoRedoButtons() {\n    const undoBtn = document.getElementById(\"btn-undo\");\n    const redoBtn = document.getElementById(\"btn-redo\");\n    if (undoBtn)\n        undoBtn.disabled = historyStack.length === 0;\n    if (redoBtn)\n        redoBtn.disabled = redoStack.length === 0;\n    const status = document.getElementById(\"status\");\n    if (status) {\n        const dirty = JSON.stringify(model) !== (baselineSnapshot || \"\");\n        status.textContent = `${dirty ? \"● \" : \"\"}Undo:${historyStack.length} Redo:${redoStack.length}`;\n    }\n}\nfunction resetHistory() {\n    historyStack.length = 0;\n    redoStack.length = 0;\n    lastHistoryTs = 0;\n    baselineSnapshot = JSON.stringify(model);\n    updateUndoRedoButtons();\n}\nlet categories = [];\nwindow.addEventListener(\"message\", (e) => {\n    const { type, payload } = e.data;\n    if (type === \"BOOT\") {\n        categories = payload.categories || [];\n        const current = payload.settings || {};\n        // If user wants to start from current\n        if (restoredModel) {\n            model = deepClone(restoredModel);\n        }\n        else {\n            model.colors = current.colors || {};\n            model.tokenColors = current.tokenColors?.textMateRules || [];\n            model.semanticTokens = current.semanticTokens?.rules || {};\n        }\n        renderAll();\n        resetHistory();\n        // restore UI state\n        if (restoredUI) {\n            const left = restoredUI.leftTab || \"colors\";\n            document\n                .querySelectorAll(\".tab\")\n                .forEach((t) => t.classList.remove(\"active\"));\n            document.querySelector(`[data-tab=\"${left}\"]`)?.classList.add(\"active\");\n            document\n                .querySelectorAll(\".panel\")\n                .forEach((x) => x.classList.remove(\"active\"));\n            document.getElementById(\"panel-\" + left)?.classList.add(\"active\");\n            const p = restoredUI.previewTab || \"editor\";\n            document\n                .querySelectorAll(\".ptab\")\n                .forEach((t) => t.classList.remove(\"active\"));\n            document.querySelector(`[data-demo=\"${p}\"]`)?.classList.add(\"active\");\n            document\n                .querySelectorAll(\".demo\")\n                .forEach((x) => (x.style.display = \"none\"));\n            document.getElementById(\"demo-\" + p).style.display = \"block\";\n            if (typeof restoredUI.search === \"string\") {\n                const search = document.getElementById(\"search\");\n                search.value = restoredUI.search;\n                const event = new Event(\"input\");\n                search.dispatchEvent(event);\n            }\n        }\n    }\n    if (type === \"LOAD_CURRENT\") {\n        model.colors = mergeColors(model.colors, payload.colors || {});\n        model.tokenColors = mergeTokenRules(model.tokenColors, payload.tokenColors || []);\n        model.semanticTokens = mergeSemanticRules(model.semanticTokens, payload.semanticTokens || {});\n        renderAll();\n        resetHistory();\n        pushPreview();\n    }\n    if (type === \"LOAD_IMPORTED\") {\n        model.colors = payload.colors || {};\n        model.tokenColors = payload.tokenColors || [];\n        model.semanticTokens = payload.semanticTokens || {};\n        renderAll();\n        resetHistory();\n        pushPreview();\n    }\n    if (type === \"LOCATE\")\n        pulse(payload?.elementId);\n    if (type === \"UI_UNDO\")\n        undo();\n    if (type === \"UI_REDO\")\n        redo();\n});\nfunction pulse(id) {\n    if (!id)\n        return;\n    const el = document.getElementById(id);\n    if (!el)\n        return;\n    el.classList.add(\"locate-pulse\");\n    setTimeout(() => el.classList.remove(\"locate-pulse\"), 1000);\n}\nfunction renderAll() {\n    renderColors();\n    renderTokens();\n    renderSemantic();\n    renderPreviewDemos();\n}\nfunction inputRow(label, key, description) {\n    const id = `color-${key}`;\n    const v = model.colors[key] || \"\";\n    const alpha = alphaFromHex(v);\n    return `\r\n    <div class=\"row\">\r\n      <div class=\"row-head\">\r\n        <strong>${label}</strong>\r\n        <button data-locate=\"${key}\" title=\"Locate in Preview\" aria-label=\"Locate ${key} in preview\">Locate</button>\r\n      </div>\r\n      <div class=\"row-body\">\r\n        <input type=\"color\" data-key=\"${key}\" value=\"${coerceHex(v)}\" aria-label=\"Color value for ${key}\" />\r\n\t\t<input type=\"text\" data-key=\"${key}\" value=\"${v}\" placeholder=\"#RRGGBB or #RRGGBBAA\" aria-label=\"Hex color for ${key}\" />\r\n\t\t<input type=\"range\" min=\"0\" max=\"100\" step=\"1\" data-alpha-key=\"${key}\" value=\"${alpha}\" title=\"Alpha ${alpha}%\" aria-label=\"Alpha for ${key}\" />\r\n        <span class=\"desc\">${description || \"\"}</span>\r\n      </div>\r\n    </div>`;\n}\nfunction coerceHex(s) {\n    // fallback to #000000 if invalid\n    return /^#([0-9a-f]{6}|[0-9a-f]{8})$/i.test(s)\n        ? `#${s.replace(\"#\", \"\").slice(0, 6)}`\n        : \"#000000\";\n}\nfunction isValidHex(s) {\n    return /^#[0-9a-f]{6}([0-9a-f]{2})?$/i.test(s.trim());\n}\nfunction normalizeHex(s) {\n    // Uppercase and ensure leading '#'\n    let v = s.trim();\n    if (!v.startsWith(\"#\"))\n        v = \"#\" + v;\n    return v.toUpperCase();\n}\nfunction renderColors() {\n    const root = document.getElementById(\"panel-colors\");\n    root.innerHTML = categories\n        .map((c) => `\r\n\t\t<details class=\"category\" open>\r\n\t\t\t<summary>${c.name}</summary>\r\n\t\t\t<div class=\"cat-list\">\r\n\t\t\t\t${c.items\n        .map((it) => inputRow(it.key, it.key, it.description || \"\"))\n        .join(\"\")}\r\n\t\t\t</div>\r\n\t\t</details>\r\n\t`)\n        .join(\"\");\n    root\n        .querySelectorAll('input[type=\"color\"], input[type=\"text\"]')\n        .forEach((el) => {\n        el.addEventListener(\"input\", handleColorInput);\n    });\n    root\n        .querySelectorAll('input[type=\"range\"][data-alpha-key]')\n        .forEach((el) => el.addEventListener(\"input\", handleAlphaInput));\n    root.querySelectorAll(\"button[data-locate]\").forEach((btn) => {\n        btn.addEventListener(\"click\", () => {\n            const key = btn.dataset.locate;\n            vscode.postMessage({\n                type: \"LOCATE\",\n                payload: { elementId: demoIdForKey(key) },\n            });\n        });\n    });\n}\nfunction handleColorInput(ev) {\n    const t = ev.target;\n    const key = t.dataset.key;\n    let val = t.value.trim();\n    const parent = t.parentElement;\n    const textInput = parent.querySelector('input[type=\"text\"][data-key=\"' + key + '\"]');\n    const colorInput = parent.querySelector('input[type=\"color\"][data-key=\"' + key + '\"]');\n    const alphaInput = parent.querySelector('input[type=\"range\"][data-alpha-key=\"' + key + '\"]');\n    if (t.type === \"color\") {\n        // preserve existing alpha from text input if present\n        const base6 = val; // #RRGGBB\n        const aPct = alphaFromHex(textInput?.value || \"\");\n        const merged = mergeHexWithAlpha(base6, aPct);\n        textInput.value = merged;\n        alphaInput.value = String(aPct);\n        val = merged;\n    }\n    else if (t.type === \"text\") {\n        // sync color and alpha controls from text\n        if (isValidHex(val)) {\n            colorInput.value = coerceHex(val);\n            alphaInput.value = String(alphaFromHex(val));\n            textInput.classList.remove(\"invalid\");\n            textInput.setAttribute(\"aria-invalid\", \"false\");\n        }\n    }\n    // Guard against invalid hex; do not apply until valid\n    if (!isValidHex(val)) {\n        textInput.classList.add(\"invalid\");\n        textInput.setAttribute(\"aria-invalid\", \"true\");\n        return;\n    }\n    textInput.classList.remove(\"invalid\");\n    textInput.setAttribute(\"aria-invalid\", \"false\");\n    recordHistory();\n    model.colors[key] = normalizeHex(val);\n    pushPreview();\n    // auto-locate in preview when editing a color\n    vscode.postMessage({\n        type: \"LOCATE\",\n        payload: { elementId: demoIdForKey(key) },\n    });\n}\nfunction handleAlphaInput(ev) {\n    const t = ev.target; // range\n    const key = t.dataset.alphaKey;\n    const parent = t.parentElement;\n    const colorInput = parent.querySelector('input[type=\"color\"][data-key=\"' + key + '\"]');\n    const textInput = parent.querySelector('input[type=\"text\"][data-key=\"' + key + '\"]');\n    const aPct = clampPct(parseInt(t.value, 10));\n    const merged = mergeHexWithAlpha(colorInput.value, aPct);\n    textInput.value = merged;\n    recordHistory();\n    model.colors[key] = merged;\n    pushPreview();\n    // auto-locate in preview when changing alpha\n    vscode.postMessage({\n        type: \"LOCATE\",\n        payload: { elementId: demoIdForKey(key) },\n    });\n}\nfunction clampPct(n) {\n    return isFinite(n) ? Math.min(100, Math.max(0, n)) : 100;\n}\nfunction alphaFromHex(v) {\n    const m = /^#[0-9a-f]{6}([0-9a-f]{2})$/i.exec(v);\n    if (!m)\n        return 100;\n    const aa = parseInt(m[1], 16);\n    return Math.round((aa / 255) * 100);\n}\nfunction mergeHexWithAlpha(base6, alphaPct) {\n    const hex6 = coerceHex(base6).replace(\"#\", \"\");\n    const a = clampPct(alphaPct);\n    const aa = Math.round((a / 100) * 255)\n        .toString(16)\n        .padStart(2, \"0\");\n    return `#${hex6}${aa}`;\n}\nfunction renderTokens() {\n    const root = document.getElementById(\"panel-tokens\");\n    const rows = model.tokenColors.map((r, idx) => tokenRow(r, idx)).join(\"\");\n    root.innerHTML = `\r\n\t\t<button id=\"add-token\" aria-label=\"Add token rule\">Add Rule</button>\r\n    <div>${rows}</div>`;\n    document.getElementById(\"add-token\").addEventListener(\"click\", () => {\n        recordHistory();\n        model.tokenColors.push({ scope: \"\", settings: {} });\n        renderTokens();\n        pushPreview();\n    });\n    root.querySelectorAll(\"[data-token-edit]\").forEach((el) => el.addEventListener(\"input\", (e) => {\n        const t = e.target;\n        const idx = Number(t.dataset.index);\n        const field = t.dataset.field;\n        recordHistory();\n        if (field === \"scope\")\n            model.tokenColors[idx].scope = t.value;\n        if (field === \"fg\") {\n            const v = t.value.trim();\n            if (!isValidHex(v)) {\n                t.classList.add(\"invalid\");\n                t.setAttribute(\"aria-invalid\", \"true\");\n                return;\n            }\n            t.classList.remove(\"invalid\");\n            t.setAttribute(\"aria-invalid\", \"false\");\n            model.tokenColors[idx].settings.foreground = normalizeHex(v);\n        }\n        if (field === \"fs\")\n            model.tokenColors[idx].settings.fontStyle = t.value;\n        pushPreview();\n        vscode.postMessage({\n            type: \"LOCATE\",\n            payload: { elementId: \"demo-editor\" },\n        });\n    }));\n    root.querySelectorAll(\"[data-token-remove]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        const i = Number(e.currentTarget.dataset.index);\n        recordHistory();\n        model.tokenColors.splice(i, 1);\n        renderTokens();\n        pushPreview();\n        vscode.postMessage({\n            type: \"LOCATE\",\n            payload: { elementId: \"demo-editor\" },\n        });\n    }));\n    root.querySelectorAll(\"[data-fs]\").forEach((cb) => cb.addEventListener(\"change\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const val = t.value;\n        const cur = (model.tokenColors[i].settings.fontStyle || \"\")\n            .split(/\\s+/)\n            .filter(Boolean);\n        const set = new Set(cur);\n        recordHistory();\n        if (t.checked)\n            set.add(val);\n        else\n            set.delete(val);\n        model.tokenColors[i].settings.fontStyle =\n            Array.from(set).join(\" \") || undefined;\n        pushPreview();\n        vscode.postMessage({\n            type: \"LOCATE\",\n            payload: { elementId: \"demo-editor\" },\n        });\n    }));\n}\nfunction tokenRow(r, idx) {\n    const fs = (r.settings.fontStyle || \"\").split(/\\s+/).filter(Boolean);\n    const has = (k) => fs.includes(k);\n    return `<div class=\"row\">\r\n\t\t<label>scope</label><input data-token-edit aria-label=\"Token scope\" data-index=\"${idx}\" data-field=\"scope\" value=\"${Array.isArray(r.scope) ? r.scope.join(\", \") : r.scope || \"\"}\" />\r\n    <label>foreground</label><input data-token-edit aria-label=\"Token foreground color\" data-index=\"${idx}\" data-field=\"fg\" value=\"${r.settings.foreground || \"\"}\" />\r\n\t\t<fieldset style=\"display:inline-flex;gap:6px;border:none;padding:0;margin:0\">\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"bold\" ${has(\"bold\") ? \"checked\" : \"\"}/> bold</label>\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"italic\" ${has(\"italic\") ? \"checked\" : \"\"}/> italic</label>\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"underline\" ${has(\"underline\") ? \"checked\" : \"\"}/> underline</label>\r\n\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"strikethrough\" ${has(\"strikethrough\") ? \"checked\" : \"\"}/> strikethrough</label>\r\n\t\t</fieldset>\r\n\t\t<button data-token-remove data-index=\"${idx}\" aria-label=\"Remove token rule ${idx + 1}\">Remove</button>\r\n  </div>`;\n}\nfunction renderSemantic() {\n    const root = document.getElementById(\"panel-semantic\");\n    const entries = Object.entries(model.semanticTokens);\n    root.innerHTML = `\r\n\t\t<button id=\"add-sem\" aria-label=\"Add semantic rule\">Add Semantic</button>\r\n    <div>${entries.map(([sel, s], i) => semRow(sel, s, i)).join(\"\")}</div>`;\n    document.getElementById(\"add-sem\").addEventListener(\"click\", () => {\n        recordHistory();\n        model.semanticTokens[\"entity.name.new\"] = {};\n        renderSemantic();\n        pushPreview();\n    });\n    root.querySelectorAll(\"[data-sem]\").forEach((el) => el.addEventListener(\"input\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        recordHistory();\n        if (t.dataset.field === \"selector\") {\n            const val = t.value;\n            const cur = model.semanticTokens[sel];\n            delete model.semanticTokens[sel];\n            model.semanticTokens[val] = cur;\n        }\n        else if (t.dataset.field === \"fg\") {\n            const v = t.value.trim();\n            if (!isValidHex(v)) {\n                t.classList.add(\"invalid\");\n                t.setAttribute(\"aria-invalid\", \"true\");\n                return;\n            }\n            t.classList.remove(\"invalid\");\n            t.setAttribute(\"aria-invalid\", \"false\");\n            model.semanticTokens[sel].foreground = normalizeHex(v);\n        }\n        else if (t.dataset.field === \"fs\") {\n            model.semanticTokens[sel].fontStyle = t.value;\n        }\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-sem-remove]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        const i = Number(e.currentTarget.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        recordHistory();\n        delete model.semanticTokens[sel];\n        renderSemantic();\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-sem-fs]\").forEach((cb) => cb.addEventListener(\"change\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        const cur = (model.semanticTokens[sel].fontStyle || \"\")\n            .split(/\\s+/)\n            .filter(Boolean);\n        const set = new Set(cur);\n        recordHistory();\n        if (t.checked)\n            set.add(t.value);\n        else\n            set.delete(t.value);\n        model.semanticTokens[sel].fontStyle =\n            Array.from(set).join(\" \") || undefined;\n        pushPreview();\n    }));\n}\nfunction semRow(sel, s, i) {\n    const fs = (s.fontStyle || \"\").split(/\\s+/).filter(Boolean);\n    const has = (k) => fs.includes(k);\n    return `<div class=\"row\">\r\n\t<label>selector</label><input data-sem aria-label=\"Semantic selector\" data-index=\"${i}\" data-field=\"selector\" value=\"${sel}\"/>\r\n\t<label>foreground</label><input data-sem aria-label=\"Semantic foreground color\" data-index=\"${i}\" data-field=\"fg\" value=\"${s.foreground || \"\"}\"/>\r\n\t\t<fieldset style=\"display:inline-flex;gap:6px;border:none;padding:0;margin:0\">\r\n\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"bold\" ${has(\"bold\") ? \"checked\" : \"\"}/> bold</label>\r\n\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"italic\" ${has(\"italic\") ? \"checked\" : \"\"}/> italic</label>\r\n\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"underline\" ${has(\"underline\") ? \"checked\" : \"\"}/> underline</label>\r\n\t\t</fieldset>\r\n\t\t<button data-sem-remove data-index=\"${i}\" aria-label=\"Remove semantic rule ${i + 1}\">Remove</button>\r\n  </div>`;\n}\nfunction renderPreviewDemos() {\n    const root = document.getElementById(\"preview\");\n    root.innerHTML = getDemosHtml();\n    applyTokenStyles();\n    // clicking preview tabs\n    document.querySelectorAll(\".ptab\").forEach((b) => b.addEventListener(\"click\", () => {\n        document\n            .querySelectorAll(\".ptab\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        b.classList.add(\"active\");\n        const id = b.dataset.demo;\n        document\n            .querySelectorAll(\".demo\")\n            .forEach((x) => (x.style.display = \"none\"));\n        document.getElementById(\"demo-\" + id).style.display = \"block\";\n        saveState();\n    }));\n}\nfunction pushPreview() {\n    if (previewTimer)\n        window.clearTimeout(previewTimer);\n    previewTimer = window.setTimeout(() => {\n        const snap = JSON.stringify(model);\n        if (snap !== lastPreviewSnapshot) {\n            lastPreviewSnapshot = snap;\n            vscode.postMessage({ type: \"APPLY_PREVIEW\", payload: model });\n            try {\n                vscode.setState && vscode.setState({ model, ui: collectUI() });\n            }\n            catch { }\n            // also update token styles in preview\n            applyTokenStyles();\n        }\n    }, PREVIEW_DEBOUNCE_MS);\n}\n// Inject simple token color styles for the editor demo\nfunction applyTokenStyles() {\n    const styleId = 'token-style';\n    let style = document.getElementById(styleId);\n    if (!style) {\n        style = document.createElement('style');\n        style.id = styleId;\n        document.head.appendChild(style);\n    }\n    const rules = model.tokenColors\n        .filter(r => r.settings && r.settings.foreground)\n        .map((r, i) => {\n        const color = r.settings.foreground;\n        const cls = `.tok-${i}`;\n        return `${cls}{color:${color};}`;\n    })\n        .join('\\n');\n    style.textContent = rules;\n    // render a small sample with classes to visualize colors\n    const editor = document.getElementById('editor');\n    if (editor) {\n        editor.innerHTML = `\r\n\t  <code>\r\n\t\t<span class=\"tok-0\">function</span> <span class=\"tok-1\">demo</span>() { <span class=\"tok-2\">console</span>.<span class=\"tok-3\">log</span>(<span class=\"tok-4\">'Hello theme'</span>); }\r\n\t  </code>`;\n    }\n}\nfunction collectUI() {\n    const leftBtn = document.querySelector(\".tab.active\");\n    const left = leftBtn?.dataset.tab || \"colors\";\n    const ptab = document.querySelector(\".ptab.active\");\n    const previewTab = ptab?.dataset.demo || \"editor\";\n    const search = document.getElementById(\"search\")?.value || \"\";\n    return { leftTab: left, previewTab, search };\n}\nfunction saveState() {\n    try {\n        vscode.setState && vscode.setState({ model, ui: collectUI() });\n    }\n    catch { }\n}\n// Map color key to demo element id\nfunction demoIdForKey(key) {\n    if (key.startsWith(\"statusBar\"))\n        return \"demo-statusbar\";\n    if (key.startsWith(\"panel\") || key.startsWith(\"panelSection\"))\n        return \"demo-panels\";\n    if (key.startsWith(\"terminal\"))\n        return \"demo-terminal\";\n    if (key.startsWith(\"problems\"))\n        return \"demo-problems\";\n    if (key.startsWith(\"tab.\") || key.startsWith(\"editorGroupHeader\"))\n        return \"demo-lists\";\n    return \"demo-editor\";\n}\n// Minimal demos\nfunction getDemosHtml() {\n    return `\r\n  <section class=\"demo\" id=\"demo-editor\" style=\"display:block\">\r\n    <div id=\"editor\" contenteditable=\"true\" style=\"min-height:220px;padding:8px;border:1px solid var(--vscode-editorWidget-border)\">\r\n      // active line, selections, cursor, hover, indent guides, etc.\r\n      function demo() { console.log('Hello theme'); }\r\n    </div>\r\n  </section>\r\n\t<section class=\"demo\" id=\"demo-panels\" style=\"display:none\">\r\n\t\t<div class=\"panel-surface\">\r\n\t\t\t<div style=\"font-weight:600;margin-bottom:6px\">Panel Title</div>\r\n\t\t\t<div>Some content inside a VS Code panel area.</div>\r\n\t\t</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-problems\" style=\"display:none\">\r\n\t\t<div class=\"problems-list\">\r\n\t\t\t<div style=\"padding:6px;border-bottom:1px solid var(--vscode-editorWidget-border)\">src/app.ts:12:5 Missing semicolon</div>\r\n\t\t\t<div style=\"padding:6px;border-bottom:1px solid var(--vscode-editorWidget-border)\">src/utils.ts:3:10 Unused variable</div>\r\n\t\t\t<div style=\"padding:6px\">src/index.ts:1:1 Unexpected any</div>\r\n\t\t</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-terminal\" style=\"display:none\">\r\n\t\t<div class=\"terminal\">PS E:\\> npm run build\\nwebpack 5 compiling... done</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-notifications\" style=\"display:none\">\r\n\t\t<div class=\"notification\">Build completed successfully.</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-statusbar\" style=\"display:none\">\r\n\t\t<div class=\"statusbar\"><span>Ln 12, Col 8</span><span>UTF-8</span><span>LF</span><span>TypeScript</span></div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-lists\" style=\"display:none\">\r\n\t\t<div class=\"list\">\r\n\t\t\t<div style=\"padding:6px;border-bottom:1px solid var(--vscode-editorWidget-border)\">tab: app.ts</div>\r\n\t\t\t<div style=\"padding:6px;border-bottom:1px solid var(--vscode-editorWidget-border)\">tab: utils.ts</div>\r\n\t\t\t<div style=\"padding:6px\">tab: index.ts</div>\r\n\t\t</div>\r\n\t</section>`;\n}\n// Merge helpers: base retains precedence; add contributes missing keys/rules\nfunction mergeColors(base, add) {\n    return { ...add, ...base }; // base wins\n}\nfunction normScopeKey(scope) {\n    if (Array.isArray(scope))\n        return scope.map((s) => s.trim()).join(\",\");\n    return String(scope || \"\").trim();\n}\nfunction mergeTokenRules(base, add) {\n    const map = new Map();\n    // base first so it wins\n    for (const r of base)\n        map.set(normScopeKey(r.scope), r);\n    for (const r of add) {\n        const k = normScopeKey(r.scope);\n        if (!map.has(k))\n            map.set(k, r);\n    }\n    return Array.from(map.values());\n}\nfunction mergeSemanticRules(base, add) {\n    return { ...add, ...base }; // base wins\n}\n// boot\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Toolbar wiring\n    const byId = (id) => document.getElementById(id);\n    byId(\"btn-import\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_IMPORT\" }));\n    byId(\"btn-use\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_USE_CURRENT\" }));\n    byId(\"btn-blank\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_START_BLANK\" }));\n    byId(\"btn-undo\")?.addEventListener(\"click\", () => {\n        undo();\n    });\n    byId(\"btn-redo\")?.addEventListener(\"click\", () => {\n        redo();\n    });\n    byId(\"btn-export-json\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_JSON\" }));\n    byId(\"btn-export-css\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_CSS\" }));\n    byId(\"btn-export-vsix\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_VSIX\" }));\n    document.querySelectorAll(\".tab\").forEach((t) => t.addEventListener(\"click\", () => {\n        document\n            .querySelectorAll(\".tab\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        t.classList.add(\"active\");\n        const id = t.dataset.tab;\n        document\n            .querySelectorAll(\".panel\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        document.getElementById(\"panel-\" + id).classList.add(\"active\");\n        saveState();\n    }));\n    const search = document.getElementById(\"search\");\n    search.addEventListener(\"input\", () => {\n        const q = search.value.toLowerCase();\n        document.querySelectorAll(\"#panel-colors details.category\").forEach((detailsEl) => {\n            let any = false;\n            detailsEl.querySelectorAll(\".row\").forEach((row) => {\n                const txt = row.textContent?.toLowerCase() || \"\";\n                const show = txt.includes(q);\n                row.style.display = show ? \"\" : \"none\";\n                if (show)\n                    any = true;\n            });\n            detailsEl.style.display = any || q === '' ? '' : 'none';\n            if (q)\n                detailsEl.open = any;\n        });\n        // tokens filter\n        document.querySelectorAll(\"#panel-tokens .row\").forEach((row) => {\n            const txt = row.textContent?.toLowerCase() || \"\";\n            row.style.display = txt.includes(q) ? \"\" : \"none\";\n        });\n        // semantic filter\n        document.querySelectorAll(\"#panel-semantic .row\").forEach((row) => {\n            const txt = row.textContent?.toLowerCase() || \"\";\n            row.style.display = txt.includes(q) ? \"\" : \"none\";\n        });\n        saveState();\n    });\n    // Keyboard shortcuts: Undo/Redo\n    window.addEventListener(\"keydown\", (e) => {\n        const ctrlOrMeta = e.ctrlKey || e.metaKey;\n        if (!ctrlOrMeta)\n            return;\n        const key = e.key.toLowerCase();\n        if (key === \"z\") {\n            e.preventDefault();\n            if (e.shiftKey)\n                redo();\n            else\n                undo();\n        }\n        else if (key === \"y\") {\n            e.preventDefault();\n            redo();\n        }\n    });\n    updateUndoRedoButtons();\n    vscode.postMessage({ type: \"REQUEST_BOOT\" });\n});\n"],"names":["restoredModel","restoredUI","vscode","acquireVsCodeApi","saved","getState","model","ui","previewTimer","lastPreviewSnapshot","colors","tokenColors","semanticTokens","historyStack","redoStack","baselineSnapshot","lastHistoryTs","deepClone","x","JSON","parse","stringify","recordHistory","now","Date","push","length","shift","updateUndoRedoButtons","undo","prev","pop","renderAll","pushPreview","redo","next","undoBtn","document","getElementById","redoBtn","disabled","status","dirty","textContent","resetHistory","categories","root","innerHTML","map","c","name","items","it","label","key","description","v","alpha","alphaFromHex","coerceHex","inputRow","join","querySelectorAll","forEach","el","addEventListener","handleColorInput","handleAlphaInput","btn","dataset","locate","postMessage","type","payload","elementId","demoIdForKey","renderColors","renderTokens","renderSemantic","applyTokenStyles","b","classList","remove","add","id","demo","style","display","saveState","s","test","replace","slice","isValidHex","trim","normalizeHex","startsWith","toUpperCase","ev","t","target","val","value","parent","parentElement","textInput","querySelector","colorInput","alphaInput","base6","aPct","merged","mergeHexWithAlpha","String","setAttribute","alphaKey","clampPct","parseInt","n","isFinite","Math","min","max","m","exec","aa","round","alphaPct","hex6","a","toString","padStart","rows","r","idx","fs","settings","fontStyle","split","filter","Boolean","has","k","includes","Array","isArray","scope","foreground","tokenRow","e","Number","index","field","i","currentTarget","splice","cb","cur","set","Set","checked","delete","from","undefined","entries","Object","sel","semRow","keys","window","clearTimeout","setTimeout","snap","setState","collectUI","styleId","createElement","head","appendChild","rules","editor","leftBtn","left","tab","ptab","leftTab","previewTab","search","normScopeKey","data","current","textMateRules","p","event","Event","dispatchEvent","base","Map","values","mergeTokenRules","mergeSemanticRules","pulse","byId","q","toLowerCase","detailsEl","any","row","show","open","txt","ctrlKey","metaKey","preventDefault","shiftKey"],"sourceRoot":""}