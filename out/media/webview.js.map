{"version":3,"file":"webview.js","mappings":"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","sources":["webpack://vscodedesignlab/./media/webview.ts"],"sourcesContent":["\"use strict\";\n// restored state placeholder\nlet restoredModel;\nlet restoredUI;\nconst vscode = acquireVsCodeApi();\n// try restore\ntry {\n    const saved = vscode.getState && vscode.getState();\n    if (saved && saved.model) {\n        restoredModel = saved.model;\n    }\n    if (saved && saved.ui) {\n        restoredUI = saved.ui;\n    }\n}\ncatch { }\nlet model = {\n    colors: {},\n    tokenColors: [],\n    semanticTokens: {},\n};\n// Coercion helpers for payloads coming from settings\nfunction coerceTokenRules(x) {\n    if (Array.isArray(x))\n        return x;\n    if (x && Array.isArray(x.textMateRules))\n        return x.textMateRules;\n    return [];\n}\nfunction coerceSemanticRules(x) {\n    if (x && typeof x === \"object\" && !Array.isArray(x)) {\n        if (x.rules && typeof x.rules === \"object\")\n            return x.rules;\n        // if it's the plain rules map already\n        const { enabled, ...rest } = x;\n        return rest && Object.keys(rest).length ? rest : {};\n    }\n    return {};\n}\n// Debounce state for preview updates\nlet previewTimer;\nconst PREVIEW_DEBOUNCE_MS = 120;\nlet lastPreviewSnapshot;\nconst historyStack = [];\nconst redoStack = [];\nlet lastHistoryTs = 0;\nconst HISTORY_MIN_INTERVAL_MS = 500;\nlet baselineSnapshot;\nconst deepClone = (x) => JSON.parse(JSON.stringify(x));\nconst recordHistory = () => {\n    const now = Date.now();\n    if (now - lastHistoryTs < HISTORY_MIN_INTERVAL_MS)\n        return;\n    historyStack.push(deepClone(model));\n    // cap history to 50 entries\n    if (historyStack.length > 50)\n        historyStack.shift();\n    // new edits invalidate redo\n    redoStack.length = 0;\n    lastHistoryTs = now;\n    updateUndoRedoButtons();\n};\nconst undo = () => {\n    if (!historyStack.length)\n        return;\n    redoStack.push(deepClone(model));\n    const prev = historyStack.pop();\n    model = deepClone(prev);\n    renderAll();\n    pushPreview();\n    updateUndoRedoButtons();\n};\nconst redo = () => {\n    if (!redoStack.length)\n        return;\n    historyStack.push(deepClone(model));\n    const next = redoStack.pop();\n    model = deepClone(next);\n    renderAll();\n    pushPreview();\n    updateUndoRedoButtons();\n};\nfunction updateUndoRedoButtons() {\n    const undoBtn = document.getElementById(\"btn-undo\");\n    const redoBtn = document.getElementById(\"btn-redo\");\n    if (undoBtn)\n        undoBtn.disabled = historyStack.length === 0;\n    if (redoBtn)\n        redoBtn.disabled = redoStack.length === 0;\n    const status = document.getElementById(\"status\");\n    if (status) {\n        const dirty = JSON.stringify(model) !== (baselineSnapshot || \"\");\n        status.textContent = `${dirty ? \"● \" : \"\"}Undo:${historyStack.length} Redo:${redoStack.length}`;\n    }\n}\nfunction resetHistory() {\n    historyStack.length = 0;\n    redoStack.length = 0;\n    lastHistoryTs = 0;\n    baselineSnapshot = JSON.stringify(model);\n    updateUndoRedoButtons();\n}\nlet categories = [];\nwindow.addEventListener(\"message\", (e) => {\n    const { type, payload } = e.data;\n    if (type === \"BOOT\") {\n        categories = payload.categories || [];\n        const current = payload.settings || {};\n        // If user wants to start from current\n        if (restoredModel) {\n            model = deepClone(restoredModel);\n        }\n        else {\n            model.colors = current.colors || {};\n            model.tokenColors = current.tokenColors?.textMateRules || [];\n            model.semanticTokens = current.semanticTokens?.rules || {};\n        }\n        renderAll();\n        resetHistory();\n        // restore UI state\n        if (restoredUI) {\n            const left = restoredUI.leftTab || \"colors\";\n            document\n                .querySelectorAll(\".tab\")\n                .forEach((t) => t.classList.remove(\"active\"));\n            document.querySelector(`[data-tab=\"${left}\"]`)?.classList.add(\"active\");\n            document\n                .querySelectorAll(\".panel\")\n                .forEach((x) => x.classList.remove(\"active\"));\n            document.getElementById(\"panel-\" + left)?.classList.add(\"active\");\n            const p = restoredUI.previewTab || \"editor\";\n            document\n                .querySelectorAll(\".ptab\")\n                .forEach((t) => t.classList.remove(\"active\"));\n            document.querySelector(`[data-demo=\"${p}\"]`)?.classList.add(\"active\");\n            document\n                .querySelectorAll(\".demo\")\n                .forEach((x) => (x.style.display = \"none\"));\n            document.getElementById(\"demo-\" + p).style.display = \"block\";\n            if (typeof restoredUI.search === \"string\") {\n                const search = document.getElementById(\"search\");\n                search.value = restoredUI.search;\n                const event = new Event(\"input\");\n                search.dispatchEvent(event);\n            }\n            // restore category open state and left scroll\n            if (restoredUI.openCats) {\n                document\n                    .querySelectorAll(\"#panel-colors details.category\")\n                    .forEach((d) => {\n                    const det = d;\n                    const title = det.querySelector(\"summary\")?.textContent?.trim() || \"\";\n                    if (title && restoredUI.openCats[title] !== undefined)\n                        det.open = !!restoredUI.openCats[title];\n                });\n            }\n            if (typeof restoredUI.leftScroll === \"number\") {\n                const panel = document.getElementById(\"panel-colors\");\n                if (panel)\n                    panel.scrollTop = restoredUI.leftScroll;\n            }\n        }\n    }\n    if (type === \"LOAD_CURRENT\") {\n        // For \"Use Current\", let current settings override existing values.\n        model.colors = mergeColors(payload.colors || {}, model.colors);\n        const incomingRules = coerceTokenRules(payload.tokenColors);\n        model.tokenColors = mergeTokenRules(incomingRules, model.tokenColors);\n        const incomingSem = coerceSemanticRules(payload.semanticTokens);\n        model.semanticTokens = mergeSemanticRules(incomingSem, model.semanticTokens);\n        renderAll();\n        resetHistory();\n        pushPreview();\n    }\n    if (type === \"LOAD_IMPORTED\") {\n        model.colors = payload.colors || {};\n        model.tokenColors = payload.tokenColors || [];\n        model.semanticTokens = payload.semanticTokens || {};\n        renderAll();\n        resetHistory();\n        pushPreview();\n    }\n    if (type === \"LOCATE\")\n        pulse(payload?.elementId);\n    if (type === \"UI_UNDO\")\n        undo();\n    if (type === \"UI_REDO\")\n        redo();\n});\nfunction pulse(id) {\n    if (!id)\n        return;\n    // Try preview area first\n    const el = document.getElementById(id);\n    if (el) {\n        el.classList.add(\"locate-pulse\");\n        setTimeout(() => el.classList.remove(\"locate-pulse\"), 1000);\n    }\n    // Also scroll and pulse the left panel row if it's a color key\n    if (id.startsWith(\"demo-\")) {\n        // When called for preview areas, only pulse the preview; do not scroll the left list.\n        // Scrolling all matching rows causes the panel to jump to the bottom on each edit.\n    }\n    else if (id.startsWith(\"row-\")) {\n        // Direct row pulse (for future use)\n        const row = document.getElementById(id);\n        if (row) {\n            row.classList.add(\"locate-pulse\");\n            row.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n            setTimeout(() => row.classList.remove(\"locate-pulse\"), 1000);\n        }\n    }\n}\nfunction renderAll() {\n    renderColors();\n    renderTokens();\n    renderSemantic();\n    renderPreviewDemos();\n}\nfunction inputRow(label, key, description) {\n    const v = model.colors[key] || \"\";\n    const alpha = alphaFromHex(v);\n    // Pick an icon based on key/category (simple heuristic)\n    let icon = \"\";\n    if (key.includes(\"background\"))\n        icon = \"🖼️\";\n    else if (key.includes(\"foreground\"))\n        icon = \"🔤\";\n    else if (key.includes(\"border\"))\n        icon = \"⬛\";\n    else if (key.includes(\"badge\"))\n        icon = \"🏷️\";\n    else if (key.includes(\"error\"))\n        icon = \"❌\";\n    else if (key.includes(\"warning\"))\n        icon = \"⚠️\";\n    else if (key.includes(\"info\"))\n        icon = \"ℹ️\";\n    else if (key.includes(\"active\"))\n        icon = \"⭐\";\n    else if (key.includes(\"inactive\"))\n        icon = \"⏸️\";\n    else if (key.includes(\"focus\"))\n        icon = \"🎯\";\n    else if (key.includes(\"selection\"))\n        icon = \"🖱️\";\n    else if (key.includes(\"highlight\"))\n        icon = \"💡\";\n    else if (key.includes(\"tab\"))\n        icon = \"📑\";\n    else if (key.includes(\"list\"))\n        icon = \"📋\";\n    else if (key.includes(\"status\"))\n        icon = \"📶\";\n    else if (key.includes(\"panel\"))\n        icon = \"🗂️\";\n    else if (key.includes(\"terminal\"))\n        icon = \"⌨️\";\n    else if (key.includes(\"editor\"))\n        icon = \"📝\";\n    else if (key.includes(\"action\"))\n        icon = \"⚡\";\n    else if (key.includes(\"find\"))\n        icon = \"🔍\";\n    else if (key.includes(\"notification\"))\n        icon = \"🔔\";\n    else if (key.includes(\"problems\"))\n        icon = \"🐞\";\n    else if (key.includes(\"title\"))\n        icon = \"🏷️\";\n    else\n        icon = \"🎨\";\n    const { short, full, truncated } = summarizeDescription(description || \"\");\n    const descAttrs = `data-full=\"${escapeHtml(full)}\"`;\n    const toggle = truncated\n        ? `<button class=\"desc-toggle\" type=\"button\" aria-label=\"Expand description\" data-toggle-desc>More</button>`\n        : \"\";\n    return `\r\n\t\t\t\t<div class=\"row\" id=\"row-${key}\">\r\n\t\t\t\t\t\t<div class=\"row-head\">\r\n\t\t\t\t\t\t\t<div class=\"row-label\">${icon} ${label}</div>\r\n\t\t\t\t\t\t\t<button class=\"locate-btn\" type=\"button\" data-locate=\"${key}\" title=\"Locate in preview\">Locate</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"row-body\">\r\n\t\t\t\t\t\t\t\t<span class=\"chip\" aria-hidden=\"true\" title=\"${v.toUpperCase()} (${alpha}%)\"><span class=\"chip-fill\" style=\"background:${isValidHex(v) ? normalizeHex(v) : \"#000000\"}\"></span></span>\r\n\t\t\t\t\t\t\t\t<input type=\"color\" data-key=\"${key}\" value=\"${coerceHex(v)}\" aria-label=\"Color value for ${key}\" />\r\n\t\t\t\t\t\t\t\t<input type=\"text\" data-key=\"${key}\" value=\"${v}\" placeholder=\"#RRGGBB or #RRGGBBAA\" aria-label=\"Hex color for ${key}\" />\r\n\t\t\t\t\t\t\t\t<input type=\"range\" min=\"0\" max=\"100\" step=\"1\" data-alpha-key=\"${key}\" value=\"${alpha}\" title=\"Alpha ${alpha}%\" aria-label=\"Alpha for ${key}\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"row-desc\">\r\n\t\t\t\t\t\t\t<span class=\"desc\" ${descAttrs}>${short}</span> ${toggle}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t`;\n}\nfunction escapeHtml(s) {\n    return s\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\");\n}\nfunction renderDescription(s) {\n    if (!s)\n        return \"\";\n    const clean = s.replace(/\\s+/g, \" \").trim();\n    if (clean.length > 140)\n        return escapeHtml(clean.slice(0, 137)) + \"...\";\n    return escapeHtml(clean);\n}\nfunction summarizeDescription(s) {\n    const clean = (s || \"\").replace(/\\s+/g, \" \").trim();\n    const truncated = clean.length > 160;\n    const short = truncated\n        ? escapeHtml(clean.slice(0, 157)) + \"...\"\n        : escapeHtml(clean);\n    return { short, full: clean, truncated };\n}\nfunction coerceHex(s) {\n    // fallback to #000000 if invalid\n    return /^#([0-9a-f]{6}|[0-9a-f]{8})$/i.test(s)\n        ? `#${s.replace(\"#\", \"\").slice(0, 6)}`\n        : \"#000000\";\n}\nfunction isValidHex(s) {\n    return /^#[0-9a-f]{6}([0-9a-f]{2})?$/i.test(s.trim());\n}\nfunction normalizeHex(s) {\n    // Uppercase and ensure leading '#'\n    let v = s.trim();\n    if (!v.startsWith(\"#\"))\n        v = \"#\" + v;\n    return v.toUpperCase();\n}\nfunction renderColors() {\n    const root = document.getElementById(\"panel-colors\");\n    // Preserve current open state and scroll before rerender\n    const prevOpen = {};\n    root.querySelectorAll(\"details.category\").forEach((d) => {\n        const det = d;\n        const title = det.querySelector(\"summary\")?.textContent?.trim() || \"\";\n        if (title)\n            prevOpen[title] = det.open;\n    });\n    const prevScroll = root.scrollTop;\n    // Render categories only (palette row removed per user request)\n    root.innerHTML = categories\n        .map((c) => `\r\n\t\t\t<details class=\"category\" ${prevOpen[c.name] ? \"open\" : \"\"}>\r\n\t\t\t\t<summary><span class=\"cat-icon\">${categoryIcon(c.name)}</span> ${c.name}</summary>\r\n\t\t\t\t<div class=\"cat-list\">\r\n\t\t\t\t\t${c.items.map((it) => inputRow(it.key, it.key, it.description || \"\")).join(\"\")}\r\n\t\t\t\t</div>\r\n\t\t\t</details>\r\n\t\t`)\n        .join(\"\");\n    root\n        .querySelectorAll('input[type=\"color\"], input[type=\"text\"]')\n        .forEach((el) => {\n        el.addEventListener(\"input\", handleColorInput);\n    });\n    root\n        .querySelectorAll('input[type=\"range\"][data-alpha-key]')\n        .forEach((el) => el.addEventListener(\"input\", handleAlphaInput));\n    root.querySelectorAll(\"button[data-locate]\").forEach((btn) => {\n        btn.addEventListener(\"click\", () => {\n            const key = btn.dataset.locate;\n            vscode.postMessage({\n                type: \"LOCATE\",\n                payload: { elementId: demoIdForKey(key) },\n            });\n        });\n    });\n    // Restore previous scroll position\n    root.scrollTop = prevScroll;\n}\nfunction categoryIcon(name) {\n    const n = (name || \"\").toLowerCase();\n    if (n.includes(\"editor\"))\n        return \"📝\";\n    if (n.includes(\"tab\"))\n        return \"📑\";\n    if (n.includes(\"status\"))\n        return \"📶\";\n    if (n.includes(\"panel\"))\n        return \"🗂️\";\n    if (n.includes(\"terminal\"))\n        return \"⌨️\";\n    if (n.includes(\"debug\") || n.includes(\"problems\"))\n        return \"🐞\";\n    if (n.includes(\"list\") || n.includes(\"explorer\"))\n        return \"📋\";\n    if (n.includes(\"activity\") || n.includes(\"sidebar\"))\n        return \"🧭\";\n    if (n.includes(\"title\"))\n        return \"🏷️\";\n    if (n.includes(\"git\") || n.includes(\"scm\"))\n        return \"🌿\";\n    if (n.includes(\"ansi\"))\n        return \"🎨\";\n    if (n.includes(\"notification\"))\n        return \"🔔\";\n    return \"🎯\";\n}\nfunction handleColorInput(ev) {\n    const t = ev.target;\n    const key = t.dataset.key;\n    let val = t.value.trim();\n    const parent = t.parentElement;\n    const chip = parent.querySelector(\".chip-fill\");\n    const textInput = parent.querySelector('input[type=\"text\"][data-key=\"' + key + '\"]');\n    const colorInput = parent.querySelector('input[type=\"color\"][data-key=\"' + key + '\"]');\n    const alphaInput = parent.querySelector('input[type=\"range\"][data-alpha-key=\"' + key + '\"]');\n    if (t.type === \"color\") {\n        // preserve existing alpha from text input if present\n        const base6 = val; // #RRGGBB\n        const aPct = alphaFromHex(textInput?.value || \"\");\n        const merged = mergeHexWithAlpha(base6, aPct);\n        textInput.value = merged;\n        alphaInput.value = String(aPct);\n        val = merged;\n    }\n    else if (t.type === \"text\") {\n        // sync color and alpha controls from text\n        if (isValidHex(val)) {\n            colorInput.value = coerceHex(val);\n            alphaInput.value = String(alphaFromHex(val));\n            textInput.classList.remove(\"invalid\");\n            textInput.setAttribute(\"aria-invalid\", \"false\");\n        }\n    }\n    // Guard against invalid hex; do not apply until valid\n    if (!isValidHex(val)) {\n        textInput.classList.add(\"invalid\");\n        textInput.setAttribute(\"aria-invalid\", \"true\");\n        if (chip)\n            chip.style.background = \"#000000\";\n        return;\n    }\n    textInput.classList.remove(\"invalid\");\n    textInput.setAttribute(\"aria-invalid\", \"false\");\n    recordHistory();\n    model.colors[key] = normalizeHex(val);\n    if (chip)\n        chip.style.background = model.colors[key];\n    pushPreview();\n    // Do not auto-locate on each edit to avoid scrolling the list\n}\nfunction handleAlphaInput(ev) {\n    const t = ev.target; // range\n    const key = t.dataset.alphaKey;\n    const parent = t.parentElement;\n    const chip = parent.querySelector(\".chip-fill\");\n    const colorInput = parent.querySelector('input[type=\"color\"][data-key=\"' + key + '\"]');\n    const textInput = parent.querySelector('input[type=\"text\"][data-key=\"' + key + '\"]');\n    const aPct = clampPct(parseInt(t.value, 10));\n    const merged = mergeHexWithAlpha(colorInput.value, aPct);\n    textInput.value = merged;\n    recordHistory();\n    model.colors[key] = merged;\n    if (chip)\n        chip.style.background = merged;\n    pushPreview();\n    // Avoid auto-locate to prevent scroll jumps\n}\nfunction clampPct(n) {\n    return isFinite(n) ? Math.min(100, Math.max(0, n)) : 100;\n}\nfunction alphaFromHex(v) {\n    const m = /^#[0-9a-f]{6}([0-9a-f]{2})$/i.exec(v);\n    if (!m)\n        return 100;\n    const aa = parseInt(m[1], 16);\n    return Math.round((aa / 255) * 100);\n}\nfunction mergeHexWithAlpha(base6, alphaPct) {\n    const hex6 = coerceHex(base6).replace(\"#\", \"\");\n    const a = clampPct(alphaPct);\n    const aa = Math.round((a / 100) * 255)\n        .toString(16)\n        .padStart(2, \"0\");\n    return `#${hex6}${aa}`;\n}\nfunction renderTokens() {\n    const root = document.getElementById(\"panel-tokens\");\n    // Preserve scroll position and advanced open states per index\n    const prevScroll = root.scrollTop;\n    const expanded = new Set();\n    root.querySelectorAll(\".row\").forEach((row, i) => {\n        const btn = row.querySelector(\"[data-toggle-adv]\");\n        if (btn && btn.getAttribute(\"aria-expanded\") === \"true\")\n            expanded.add(i);\n    });\n    const rows = model.tokenColors.map((r, idx) => tokenRow(r, idx)).join(\"\");\n    root.innerHTML = `\r\n\t\t<button id=\"add-token\" aria-label=\"Add token rule\">Add Rule</button>\r\n\t\t<div>${rows}</div>`;\n    document.getElementById(\"add-token\").addEventListener(\"click\", () => {\n        recordHistory();\n        model.tokenColors.push({ scope: \"\", settings: {} });\n        renderTokens();\n        pushPreview();\n    });\n    root.querySelectorAll(\"[data-token-edit]\").forEach((el) => el.addEventListener(\"input\", (e) => {\n        const t = e.target;\n        const idx = Number(t.dataset.index);\n        const field = t.dataset.field;\n        recordHistory();\n        if (field === \"scope\")\n            model.tokenColors[idx].scope = t.value;\n        if (field === \"fg\") {\n            const v = t.value.trim();\n            if (!isValidHex(v)) {\n                t.classList.add(\"invalid\");\n                t.setAttribute(\"aria-invalid\", \"true\");\n                return;\n            }\n            t.classList.remove(\"invalid\");\n            t.setAttribute(\"aria-invalid\", \"false\");\n            model.tokenColors[idx].settings.foreground = normalizeHex(v);\n        }\n        if (field === \"fs\")\n            model.tokenColors[idx].settings.fontStyle = t.value;\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-token-remove]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        const i = Number(e.currentTarget.dataset.index);\n        recordHistory();\n        model.tokenColors.splice(i, 1);\n        renderTokens();\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-fs]\").forEach((cb) => cb.addEventListener(\"change\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const val = t.value;\n        const cur = (model.tokenColors[i].settings.fontStyle || \"\")\n            .split(/\\s+/)\n            .filter(Boolean);\n        const set = new Set(cur);\n        recordHistory();\n        if (t.checked)\n            set.add(val);\n        else\n            set.delete(val);\n        model.tokenColors[i].settings.fontStyle =\n            Array.from(set).join(\" \") || undefined;\n        pushPreview();\n    }));\n    // Locate buttons\n    root.querySelectorAll(\".locate-btn\").forEach((btn) => btn.addEventListener(\"click\", () => {\n        vscode.postMessage({\n            type: \"LOCATE\",\n            payload: { elementId: \"demo-editor\" },\n        });\n    }));\n    // Advanced toggles\n    root.querySelectorAll(\"[data-toggle-adv]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const b = btn;\n        const row = b.closest(\".row\");\n        if (!row)\n            return;\n        const adv = row.querySelector(\".advanced\");\n        if (!adv)\n            return;\n        const expanded = b.getAttribute(\"aria-expanded\") === \"true\";\n        if (expanded) {\n            adv.classList.add(\"collapsed\");\n            b.textContent = \"Advanced\";\n            b.setAttribute(\"aria-expanded\", \"false\");\n        }\n        else {\n            adv.classList.remove(\"collapsed\");\n            b.textContent = \"Less\";\n            b.setAttribute(\"aria-expanded\", \"true\");\n        }\n    }));\n    // Re-open advanced sections that were previously expanded\n    root.querySelectorAll(\".row\").forEach((row, i) => {\n        if (!expanded.has(i))\n            return;\n        const adv = row.querySelector(\".advanced\");\n        const btn = row.querySelector(\"[data-toggle-adv]\");\n        if (adv && btn) {\n            adv.classList.remove(\"collapsed\");\n            btn.textContent = \"Less\";\n            btn.setAttribute(\"aria-expanded\", \"true\");\n        }\n    });\n    // Restore scroll\n    root.scrollTop = prevScroll;\n}\nfunction tokenRow(r, idx) {\n    const fs = (r.settings.fontStyle || \"\").split(/\\s+/).filter(Boolean);\n    const has = (k) => fs.includes(k);\n    return `<div class=\"row\">\r\n\t\t\t<div class=\"row-head\">\r\n\t\t\t\t<div class=\"row-label\">🎯 Token Rule ${idx + 1}</div>\r\n\t\t\t\t<button class=\"locate-btn\" type=\"button\" title=\"Locate editor preview\">Locate</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row-body\">\r\n\t\t\t\t<label>scope</label><input data-token-edit aria-label=\"Token scope\" data-index=\"${idx}\" data-field=\"scope\" value=\"${Array.isArray(r.scope) ? r.scope.join(\", \") : r.scope || \"\"}\" />\r\n\t\t\t\t<label>foreground</label>\r\n\t\t\t\t<span class=\"chip\" aria-hidden=\"true\"><span class=\"chip-fill\" style=\"background:${isValidHex(r.settings.foreground || \"\")\n        ? normalizeHex(r.settings.foreground)\n        : \"#000000\"}\"></span></span>\r\n\t\t\t\t<input data-token-edit aria-label=\"Token foreground color\" data-index=\"${idx}\" data-field=\"fg\" value=\"${r.settings.foreground || \"\"}\" />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row-desc\">\r\n\t\t\t\t<button class=\"desc-toggle\" type=\"button\" data-toggle-adv aria-expanded=\"false\">Advanced</button>\r\n\t\t\t\t<div class=\"advanced collapsed\">\r\n\t\t\t\t\t<fieldset style=\"display:inline-flex;gap:6px;border:none;padding:0;margin:0\">\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"bold\" ${has(\"bold\") ? \"checked\" : \"\"}/> bold</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"italic\" ${has(\"italic\") ? \"checked\" : \"\"}/> italic</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"underline\" ${has(\"underline\") ? \"checked\" : \"\"}/> underline</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-fs data-index=\"${idx}\" value=\"strikethrough\" ${has(\"strikethrough\") ? \"checked\" : \"\"}/> strikethrough</label>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<button data-token-remove data-index=\"${idx}\" aria-label=\"Remove token rule ${idx + 1}\">Remove</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>`;\n}\nfunction renderSemantic() {\n    const root = document.getElementById(\"panel-semantic\");\n    // Preserve scroll and expanded states\n    const prevScroll = root.scrollTop;\n    const expanded = new Set();\n    root.querySelectorAll(\".row\").forEach((row, i) => {\n        const btn = row.querySelector(\"[data-toggle-adv]\");\n        if (btn && btn.getAttribute(\"aria-expanded\") === \"true\")\n            expanded.add(i);\n    });\n    const entries = Object.entries(model.semanticTokens);\n    root.innerHTML = `\r\n\t\t<button id=\"add-sem\" aria-label=\"Add semantic rule\">Add Semantic</button>\r\n\t<div>${entries.map(([sel, s], i) => semRow(sel, s, i)).join(\"\")}</div>`;\n    document.getElementById(\"add-sem\").addEventListener(\"click\", () => {\n        recordHistory();\n        model.semanticTokens[\"entity.name.new\"] = {};\n        renderSemantic();\n        pushPreview();\n    });\n    root.querySelectorAll(\"[data-sem]\").forEach((el) => el.addEventListener(\"input\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const keys = Object.keys(model.semanticTokens);\n        const sel = keys[i];\n        recordHistory();\n        if (t.dataset.field === \"selector\") {\n            const val = t.value;\n            const cur = model.semanticTokens[sel];\n            delete model.semanticTokens[sel];\n            model.semanticTokens[val] = cur;\n        }\n        else if (t.dataset.field === \"fg\") {\n            const v = t.value.trim();\n            const chip = (t.previousElementSibling &&\n                t.previousElementSibling.classList.contains(\"chip\")\n                ? t.previousElementSibling.querySelector(\".chip-fill\")\n                : null);\n            if (!isValidHex(v)) {\n                t.classList.add(\"invalid\");\n                t.setAttribute(\"aria-invalid\", \"true\");\n                if (chip)\n                    chip.style.background = \"#000000\";\n                return;\n            }\n            t.classList.remove(\"invalid\");\n            t.setAttribute(\"aria-invalid\", \"false\");\n            model.semanticTokens[sel].foreground = normalizeHex(v);\n            if (chip)\n                chip.style.background = model.semanticTokens[sel].foreground;\n        }\n        else if (t.dataset.field === \"fs\") {\n            model.semanticTokens[sel].fontStyle = t.value;\n        }\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-sem-remove]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        const i = Number(e.currentTarget.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        recordHistory();\n        delete model.semanticTokens[sel];\n        renderSemantic();\n        pushPreview();\n    }));\n    root.querySelectorAll(\"[data-sem-fs]\").forEach((cb) => cb.addEventListener(\"change\", (e) => {\n        const t = e.target;\n        const i = Number(t.dataset.index);\n        const entries = Object.keys(model.semanticTokens);\n        const sel = entries[i];\n        const cur = (model.semanticTokens[sel].fontStyle || \"\")\n            .split(/\\s+/)\n            .filter(Boolean);\n        const set = new Set(cur);\n        recordHistory();\n        if (t.checked)\n            set.add(t.value);\n        else\n            set.delete(t.value);\n        model.semanticTokens[sel].fontStyle =\n            Array.from(set).join(\" \") || undefined;\n        pushPreview();\n    }));\n    // Locate buttons\n    root.querySelectorAll(\".locate-btn\").forEach((btn) => btn.addEventListener(\"click\", () => {\n        vscode.postMessage({\n            type: \"LOCATE\",\n            payload: { elementId: \"demo-editor\" },\n        });\n    }));\n    // Advanced toggles\n    root.querySelectorAll(\"[data-toggle-adv]\").forEach((btn) => btn.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        const b = btn;\n        const row = b.closest(\".row\");\n        if (!row)\n            return;\n        const adv = row.querySelector(\".advanced\");\n        if (!adv)\n            return;\n        const expanded = b.getAttribute(\"aria-expanded\") === \"true\";\n        if (expanded) {\n            adv.classList.add(\"collapsed\");\n            b.textContent = \"Advanced\";\n            b.setAttribute(\"aria-expanded\", \"false\");\n        }\n        else {\n            adv.classList.remove(\"collapsed\");\n            b.textContent = \"Less\";\n            b.setAttribute(\"aria-expanded\", \"true\");\n        }\n    }));\n    // Re-open advanced sections that were previously expanded\n    root.querySelectorAll(\".row\").forEach((row, i) => {\n        if (!expanded.has(i))\n            return;\n        const adv = row.querySelector(\".advanced\");\n        const btn = row.querySelector(\"[data-toggle-adv]\");\n        if (adv && btn) {\n            adv.classList.remove(\"collapsed\");\n            btn.textContent = \"Less\";\n            btn.setAttribute(\"aria-expanded\", \"true\");\n        }\n    });\n    // Restore scroll\n    root.scrollTop = prevScroll;\n}\nfunction semRow(sel, s, i) {\n    const fs = (s.fontStyle || \"\").split(/\\s+/).filter(Boolean);\n    const has = (k) => fs.includes(k);\n    return `<div class=\"row\">\r\n\t\t\t<div class=\"row-head\">\r\n\t\t\t\t<div class=\"row-label\">🧠 Semantic ${i + 1}</div>\r\n\t\t\t\t<button class=\"locate-btn\" type=\"button\" title=\"Locate editor preview\">Locate</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row-body\">\r\n\t\t\t\t<label>selector</label><input data-sem aria-label=\"Semantic selector\" data-index=\"${i}\" data-field=\"selector\" value=\"${sel}\"/>\r\n\t\t\t\t<label>foreground</label>\r\n\t\t\t\t<span class=\"chip\" aria-hidden=\"true\"><span class=\"chip-fill\" style=\"background:${isValidHex(s.foreground || \"\")\n        ? normalizeHex(s.foreground)\n        : \"#000000\"}\"></span></span>\r\n\t\t\t\t<input data-sem aria-label=\"Semantic foreground color\" data-index=\"${i}\" data-field=\"fg\" value=\"${s.foreground || \"\"}\"/>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row-desc\">\r\n\t\t\t\t<button class=\"desc-toggle\" type=\"button\" data-toggle-adv aria-expanded=\"false\">Advanced</button>\r\n\t\t\t\t<div class=\"advanced collapsed\">\r\n\t\t\t\t\t<fieldset style=\"display:inline-flex;gap:6px;border:none;padding:0;margin:0\">\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"bold\" ${has(\"bold\") ? \"checked\" : \"\"}/> bold</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"italic\" ${has(\"italic\") ? \"checked\" : \"\"}/> italic</label>\r\n\t\t\t\t\t\t<label><input type=\"checkbox\" data-sem-fs data-index=\"${i}\" value=\"underline\" ${has(\"underline\") ? \"checked\" : \"\"}/> underline</label>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t\t<button data-sem-remove data-index=\"${i}\" aria-label=\"Remove semantic rule ${i + 1}\">Remove</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>`;\n}\nfunction renderPreviewDemos() {\n    const root = document.getElementById(\"preview\");\n    // Preserve currently active demo tab\n    const activeDemo = document.querySelector(\".ptab.active\")?.dataset\n        .demo || \"editor\";\n    root.innerHTML = getDemosHtml();\n    applyTokenStyles();\n    // clicking preview tabs\n    document.querySelectorAll(\".ptab\").forEach((b) => b.addEventListener(\"click\", () => {\n        document\n            .querySelectorAll(\".ptab\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        b.classList.add(\"active\");\n        const id = b.dataset.demo;\n        document\n            .querySelectorAll(\".demo\")\n            .forEach((x) => (x.style.display = \"none\"));\n        document.getElementById(\"demo-\" + id).style.display = \"block\";\n        saveState();\n    }));\n    // Ensure the previously active demo is visible after rerender\n    document\n        .querySelectorAll(\".demo\")\n        .forEach((x) => (x.style.display = \"none\"));\n    const activeEl = document.getElementById(\"demo-\" + activeDemo);\n    if (activeEl)\n        activeEl.style.display = \"block\";\n}\nfunction pushPreview() {\n    if (previewTimer)\n        window.clearTimeout(previewTimer);\n    previewTimer = window.setTimeout(() => {\n        const snap = JSON.stringify(model);\n        if (snap !== lastPreviewSnapshot) {\n            lastPreviewSnapshot = snap;\n            vscode.postMessage({ type: \"APPLY_PREVIEW\", payload: model });\n            try {\n                vscode.setState && vscode.setState({ model, ui: collectUI() });\n            }\n            catch { }\n            // also update token styles in preview\n            applyTokenStyles();\n        }\n    }, PREVIEW_DEBOUNCE_MS);\n}\n// Inject simple token color styles for the editor demo\nfunction applyTokenStyles() {\n    const styleId = \"token-style\";\n    let style = document.getElementById(styleId);\n    if (!style) {\n        style = document.createElement(\"style\");\n        style.id = styleId;\n        document.head.appendChild(style);\n    }\n    const rules = model.tokenColors\n        .filter((r) => r.settings && r.settings.foreground)\n        .map((r, i) => {\n        const color = r.settings.foreground;\n        const cls = `#code-sample .tok-${i}`;\n        return `${cls}{color:${color};}`;\n    })\n        .join(\"\\n\");\n    style.textContent = rules;\n    // sample HTML is static in getDemosHtml(); nothing to rewrite here\n}\nfunction collectUI() {\n    const leftBtn = document.querySelector(\".tab.active\");\n    const left = leftBtn?.dataset.tab || \"colors\";\n    const ptab = document.querySelector(\".ptab.active\");\n    const previewTab = ptab?.dataset.demo || \"editor\";\n    const search = document.getElementById(\"search\")?.value || \"\";\n    const openCats = {};\n    document.querySelectorAll(\"#panel-colors details.category\").forEach((d) => {\n        const det = d;\n        const title = det.querySelector(\"summary\")?.textContent?.trim() || \"\";\n        if (title)\n            openCats[title] = det.open;\n    });\n    const leftScroll = document.getElementById(\"panel-colors\")?.scrollTop || 0;\n    return { leftTab: left, previewTab, search, openCats, leftScroll };\n}\nfunction saveState() {\n    try {\n        vscode.setState && vscode.setState({ model, ui: collectUI() });\n    }\n    catch { }\n}\n// Map color key to demo element id\nfunction demoIdForKey(key) {\n    if (key.startsWith(\"statusBar\"))\n        return \"demo-statusbar\";\n    if (key.startsWith(\"panel\") || key.startsWith(\"panelSection\"))\n        return \"demo-panels\";\n    if (key.startsWith(\"terminal\"))\n        return \"demo-terminal\";\n    if (key.startsWith(\"problems\"))\n        return \"demo-problems\";\n    if (key.startsWith(\"tab.\") || key.startsWith(\"editorGroupHeader\"))\n        return \"demo-lists\";\n    return \"demo-editor\";\n}\n// Minimal demos\nfunction getDemosHtml() {\n    // VS Code-like frame with sidebar, file tree, and your preview tabs/logic\n    return `\r\n\t\t\t <section class=\"demo\" id=\"demo-editor\" style=\"display:block\">\r\n\t\t\t\t <div class=\"vsc-frame vsc-frame-preview\">\r\n\t\t\t\t\t <div class=\"vsc-titlebar\">\r\n\t\t\t\t\t\t VS Code Design Lab — Editor Preview\r\n\t\t\t\t\t\t <button id=\"btn-save-theme\" class=\"save-theme-btn\" title=\"Save Theme\">\r\n\t\t\t\t\t\t\t <span class=\"icon\">💾</span> Save Theme\r\n\t\t\t\t\t\t </button>\r\n\t\t\t\t\t </div>\r\n\t\t\t\t\t <div class=\"vsc-main\">\r\n\t\t\t\t\t\t <aside class=\"vsc-sidebar\">\r\n\t\t\t\t\t\t\t <div class=\"vsc-sidebar-icon active\" title=\"Explorer\">📂</div>\r\n\t\t\t\t\t\t\t <div class=\"vsc-sidebar-icon\" title=\"Search\">🔍</div>\r\n\t\t\t\t\t\t\t <div class=\"vsc-sidebar-icon\" title=\"Source Control\">🔀</div>\r\n\t\t\t\t\t\t\t <div class=\"vsc-sidebar-icon\" title=\"Run &amp; Debug\">🐞</div>\r\n\t\t\t\t\t\t\t <div class=\"vsc-sidebar-icon\" title=\"Extensions\">🧩</div>\r\n\t\t\t\t\t\t </aside>\r\n\t\t\t\t\t\t <div class=\"vsc-content\">\r\n\t\t\t\t\t\t\t <div class=\"vsc-filetree\">\r\n\t\t\t\t\t\t\t\t <div class=\"filetree-title\">EXPLORER</div>\r\n\t\t\t\t\t\t\t\t <div class=\"filetree-folder\"><span class=\"filetree-folder-icon\">📁</span> src\r\n\t\t\t\t\t\t\t\t\t <div class=\"filetree-file\"><span class=\"filetree-file-icon\">📄</span> app.ts</div>\r\n\t\t\t\t\t\t\t\t\t <div class=\"filetree-file\"><span class=\"filetree-file-icon\">📄</span> utils.ts</div>\r\n\t\t\t\t\t\t\t\t\t <div class=\"filetree-file\"><span class=\"filetree-file-icon\">📄</span> index.ts</div>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-tabs\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-tab active\"><span class=\"tab-dot\" aria-hidden=\"true\"></span><span class=\"tab-title\">app.ts</span><span class=\"tab-close\" aria-hidden=\"true\">×</span></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-tab\"><span class=\"tab-title\">utils.ts</span><span class=\"tab-close\" aria-hidden=\"true\">×</span></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-tab\"><span class=\"tab-title\">index.ts</span><span class=\"tab-close\" aria-hidden=\"true\">×</span></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-breadcrumbs\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"crumb\">workspace</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"crumb-sep\">›</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"crumb\">src</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"crumb-sep\">›</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"crumb active\">app.ts</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t <div id=\"editor\" class=\"editor-area\">\r\n\t\t\t\t\t\t\t\t <div class=\"gutter\">1<br>2<br>3<br>4<br>5</div>\r\n\t\t\t\t\t\t\t\t <div class=\"code-area\">\r\n\t\t\t\t\t\t\t\t\t <div class=\"active-line\"></div>\r\n\t\t\t\t\t\t\t\t\t <div class=\"selection\"></div>\r\n\t\t\t\t\t\t\t\t\t <div class=\"cursor\"></div>\r\n\t\t\t\t\t\t\t\t\t <pre id=\"code-sample\"><code>\r\n<span class=\"tok-0\">function</span> <span class=\"tok-1\">demo</span>() { <span class=\"tok-2\">console</span>.<span class=\"tok-3\">log</span>(<span class=\"tok-4\">'Hello theme'</span>); }\r\n\t\t\t\t\t\t\t\t\t </code></pre>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"minimap\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"minimap-track\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"minimap-viewport\"></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-notification animate-in\">🔔 Build completed successfully.</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-bottom-panel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-bottom-tabs\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-bottom-tab active\">PROBLEMS</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-bottom-tab\">OUTPUT</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-bottom-tab\">TERMINAL</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-bottom-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-problem-item\">src/app.ts(12,5): Missing semicolon.</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"vsc-problem-item\">src/utils.ts(3,10): Unused variable.</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t </div>\r\n\t\t\t\t\t <div class=\"vsc-statusbar\"><span>Ln 12, Col 8</span><span>UTF-8</span><span>LF</span><span>TypeScript</span></div>\r\n\t\t\t\t </div>\r\n\t\t\t </section>\r\n\t<section class=\"demo\" id=\"demo-panels\" style=\"display:none\">\r\n\t\t<div class=\"panel-surface\">\r\n\t\t\t<div style=\"font-weight:600;margin-bottom:6px\">Panel Title</div>\r\n\t\t\t<div>Some content inside a VS Code panel area.</div>\r\n\t\t</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-problems\" style=\"display:none\">\r\n\t\t<div class=\"problems-list\">\r\n\t\t\t<div style=\"padding:6px;border-bottom:1px solid var(--vscode-editorWidget-border)\">src/app.ts:12:5 Missing semicolon</div>\r\n\t\t\t<div style=\"padding:6px;border-bottom:1px solid var(--vscode-editorWidget-border)\">src/utils.ts:3:10 Unused variable</div>\r\n\t\t\t<div style=\"padding:6px\">src/index.ts:1:1 Unexpected any</div>\r\n\t\t</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-terminal\" style=\"display:none\">\r\n\t\t<div class=\"terminal\">PS E:&gt; npm run build<br>webpack 5 compiling... done</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-notifications\" style=\"display:none\">\r\n\t\t<div class=\"notification animate-in\">Build completed successfully.</div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-statusbar\" style=\"display:none\">\r\n\t\t<div class=\"statusbar\"><span>Ln 12, Col 8</span><span>UTF-8</span><span>LF</span><span>TypeScript</span></div>\r\n\t</section>\r\n\t<section class=\"demo\" id=\"demo-lists\" style=\"display:none\">\r\n\t\t\t<div class=\"list\">\r\n\t\t\t\t<div style=\"display:flex;border-bottom:1px solid var(--vscode-editorGroupHeader-tabsBorder)\">\r\n\t\t\t\t\t<div style=\"padding:6px 10px;background:var(--vscode-tab-activeBackground);color:var(--vscode-tab-activeForeground);border-right:1px solid var(--vscode-editorGroupHeader-tabsBorder)\">app.ts</div>\r\n\t\t\t\t\t<div style=\"padding:6px 10px;background:var(--vscode-tab-inactiveBackground);color:var(--vscode-tab-inactiveForeground);border-right:1px solid var(--vscode-editorGroupHeader-tabsBorder)\">utils.ts</div>\r\n\t\t\t\t\t<div style=\"padding:6px 10px;background:var(--vscode-tab-inactiveBackground);color:var(--vscode-tab-inactiveForeground)\">index.ts</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style=\"padding:8px\">Content area under tabs</div>\r\n\t\t\t</div>\r\n\t</section>`;\n}\n// Merge helpers: base retains precedence; add contributes missing keys/rules\nfunction mergeColors(base, add) {\n    return { ...add, ...base }; // base wins\n}\nfunction normScopeKey(scope) {\n    if (Array.isArray(scope))\n        return scope.map((s) => s.trim()).join(\",\");\n    return String(scope || \"\").trim();\n}\nfunction mergeTokenRules(base, add) {\n    const map = new Map();\n    // base first so it wins\n    for (const r of base)\n        map.set(normScopeKey(r.scope), r);\n    for (const r of add) {\n        const k = normScopeKey(r.scope);\n        if (!map.has(k))\n            map.set(k, r);\n    }\n    return Array.from(map.values());\n}\nfunction mergeSemanticRules(base, add) {\n    return { ...add, ...base }; // base wins\n}\n// boot\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // Save Theme button wiring\n    document.addEventListener(\"click\", (e) => {\n        const btn = e.target.closest(\"#btn-save-theme\");\n        if (btn) {\n            vscode.postMessage({ type: \"REQUEST_SAVE_THEME\", payload: model });\n        }\n    });\n    // Toolbar wiring\n    const byId = (id) => document.getElementById(id);\n    byId(\"btn-import\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_IMPORT\" }));\n    byId(\"btn-use\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_USE_CURRENT\" }));\n    byId(\"btn-blank\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_START_BLANK\" }));\n    byId(\"btn-undo\")?.addEventListener(\"click\", () => {\n        undo();\n    });\n    byId(\"btn-redo\")?.addEventListener(\"click\", () => {\n        redo();\n    });\n    byId(\"btn-export-json\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_JSON\" }));\n    byId(\"btn-export-css\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_CSS\" }));\n    byId(\"btn-export-vsix\")?.addEventListener(\"click\", () => vscode.postMessage({ type: \"REQUEST_EXPORT_VSIX\" }));\n    // Expand/collapse description toggles\n    document.addEventListener(\"click\", (e) => {\n        const t = e.target.closest(\"[data-toggle-desc]\");\n        if (!t)\n            return;\n        e.preventDefault();\n        const btn = t;\n        const row = btn.closest(\".row\");\n        if (!row)\n            return;\n        const desc = row.querySelector(\".desc\");\n        if (!desc)\n            return;\n        const full = desc.getAttribute(\"data-full\") || \"\";\n        const isExpanded = btn.getAttribute(\"aria-expanded\") === \"true\";\n        if (isExpanded) {\n            // collapse\n            desc.textContent = renderDescription(full);\n            btn.textContent = \"More\";\n            btn.setAttribute(\"aria-expanded\", \"false\");\n        }\n        else {\n            // expand\n            desc.textContent = full;\n            btn.textContent = \"Less\";\n            btn.setAttribute(\"aria-expanded\", \"true\");\n        }\n    });\n    document.querySelectorAll(\".tab\").forEach((t) => t.addEventListener(\"click\", () => {\n        document\n            .querySelectorAll(\".tab\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        t.classList.add(\"active\");\n        const id = t.dataset.tab;\n        document\n            .querySelectorAll(\".panel\")\n            .forEach((x) => x.classList.remove(\"active\"));\n        document.getElementById(\"panel-\" + id).classList.add(\"active\");\n        saveState();\n    }));\n    // track category open/close\n    document.addEventListener(\"toggle\", (e) => {\n        const target = e.target;\n        if (target && target.matches && target.matches(\"details.category\")) {\n            saveState();\n        }\n    }, true);\n    // track left scroll\n    const leftPanel = document.getElementById(\"panel-colors\");\n    if (leftPanel) {\n        leftPanel.addEventListener(\"scroll\", () => {\n            // throttle via microtask to avoid excessive setState\n            window.requestAnimationFrame(() => saveState());\n        });\n    }\n    const search = document.getElementById(\"search\");\n    search.addEventListener(\"input\", () => {\n        const q = search.value.toLowerCase();\n        document\n            .querySelectorAll(\"#panel-colors details.category\")\n            .forEach((detailsEl) => {\n            let any = false;\n            detailsEl.querySelectorAll(\".row\").forEach((row) => {\n                const txt = row.textContent?.toLowerCase() || \"\";\n                const show = txt.includes(q);\n                row.style.display = show ? \"\" : \"none\";\n                if (show)\n                    any = true;\n            });\n            detailsEl.style.display =\n                any || q === \"\" ? \"\" : \"none\";\n            if (q)\n                detailsEl.open = any;\n        });\n        // tokens filter\n        document.querySelectorAll(\"#panel-tokens .row\").forEach((row) => {\n            const txt = row.textContent?.toLowerCase() || \"\";\n            row.style.display = txt.includes(q) ? \"\" : \"none\";\n        });\n        // semantic filter\n        document.querySelectorAll(\"#panel-semantic .row\").forEach((row) => {\n            const txt = row.textContent?.toLowerCase() || \"\";\n            row.style.display = txt.includes(q) ? \"\" : \"none\";\n        });\n        saveState();\n    });\n    const clearBtn = document.getElementById(\"clear-search\");\n    if (clearBtn) {\n        clearBtn.addEventListener(\"click\", () => {\n            search.value = \"\";\n            const event = new Event(\"input\");\n            search.dispatchEvent(event);\n            saveState();\n        });\n    }\n    // Keyboard shortcuts: Undo/Redo\n    window.addEventListener(\"keydown\", (e) => {\n        const ctrlOrMeta = e.ctrlKey || e.metaKey;\n        if (!ctrlOrMeta)\n            return;\n        const key = e.key.toLowerCase();\n        if (key === \"z\") {\n            e.preventDefault();\n            if (e.shiftKey)\n                redo();\n            else\n                undo();\n        }\n        else if (key === \"y\") {\n            e.preventDefault();\n            redo();\n        }\n    });\n    updateUndoRedoButtons();\n    vscode.postMessage({ type: \"REQUEST_BOOT\" });\n});\n"],"names":["restoredModel","restoredUI","vscode","acquireVsCodeApi","saved","getState","model","ui","previewTimer","lastPreviewSnapshot","colors","tokenColors","semanticTokens","historyStack","redoStack","baselineSnapshot","lastHistoryTs","deepClone","x","JSON","parse","stringify","recordHistory","now","Date","push","length","shift","updateUndoRedoButtons","undo","prev","pop","renderAll","pushPreview","redo","next","undoBtn","document","getElementById","redoBtn","disabled","status","dirty","textContent","resetHistory","categories","root","prevOpen","querySelectorAll","forEach","d","det","title","querySelector","trim","open","prevScroll","scrollTop","innerHTML","map","c","name","n","toLowerCase","includes","categoryIcon","items","it","label","key","description","v","alpha","alphaFromHex","icon","short","full","truncated","s","clean","replace","escapeHtml","slice","summarizeDescription","descAttrs","toggle","toUpperCase","isValidHex","normalizeHex","coerceHex","inputRow","join","el","addEventListener","handleColorInput","handleAlphaInput","btn","dataset","locate","postMessage","type","payload","elementId","demoIdForKey","renderColors","renderTokens","renderSemantic","activeDemo","demo","applyTokenStyles","b","classList","remove","add","id","style","display","saveState","activeEl","renderPreviewDemos","test","startsWith","ev","t","target","val","value","parent","parentElement","chip","textInput","colorInput","alphaInput","base6","aPct","merged","mergeHexWithAlpha","String","setAttribute","background","alphaKey","clampPct","parseInt","isFinite","Math","min","max","m","exec","aa","round","alphaPct","hex6","a","toString","padStart","expanded","Set","row","i","getAttribute","rows","r","idx","fs","settings","fontStyle","split","filter","Boolean","has","k","Array","isArray","scope","foreground","tokenRow","e","Number","index","field","currentTarget","splice","cb","cur","set","checked","delete","from","undefined","preventDefault","closest","adv","entries","Object","sel","semRow","keys","previousElementSibling","contains","window","clearTimeout","setTimeout","snap","setState","collectUI","styleId","createElement","head","appendChild","rules","leftBtn","left","tab","ptab","previewTab","search","openCats","leftScroll","leftTab","normScopeKey","data","current","textMateRules","p","event","Event","dispatchEvent","panel","base","incomingRules","Map","values","mergeTokenRules","incomingSem","enabled","rest","coerceSemanticRules","mergeSemanticRules","scrollIntoView","behavior","block","pulse","byId","desc","renderDescription","matches","leftPanel","requestAnimationFrame","q","detailsEl","any","show","txt","clearBtn","ctrlKey","metaKey","shiftKey"],"sourceRoot":""}