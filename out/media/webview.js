(()=>{"use strict";const e=acquireVsCodeApi();let t={colors:{},tokenColors:[],semanticTokens:{}},n=[];function a(){!function(){const a=document.getElementById("panel-colors");a.innerHTML=n.map(e=>`\n    <section>\n      <h4>${e.name}</h4>\n      ${e.items.map(e=>function(e,n,a){const s=t.colors[n]||"",l=i(s);return`\n    <div class="row">\n      <div class="row-head">\n        <strong>${e}</strong>\n        <button data-locate="${n}" title="Locate in Preview">Locate</button>\n      </div>\n      <div class="row-body">\n        <input type="color" data-key="${n}" value="${o(s)}" />\n\t\t<input type="text" data-key="${n}" value="${s}" placeholder="#RRGGBB or #RRGGBBAA"/>\n\t\t<input type="range" min="0" max="100" step="1" data-alpha-key="${n}" value="${l}" title="Alpha ${l}%"/>\n        <span class="desc">${a||""}</span>\n      </div>\n    </div>`}(e.key,e.key,e.description||"")).join("")}\n    </section>\n  `).join(""),a.querySelectorAll('input[type="color"], input[type="text"]').forEach(e=>{e.addEventListener("input",s)}),a.querySelectorAll('input[type="range"][data-alpha-key]').forEach(e=>e.addEventListener("input",l)),a.querySelectorAll("button[data-locate]").forEach(t=>{t.addEventListener("click",()=>{const n=t.dataset.locate;e.postMessage({type:"LOCATE",payload:{elementId:m(n)}})})})}(),r(),u(),document.getElementById("preview").innerHTML='\n  <section class="demo" id="demo-editor" style="display:block">\n    <div id="editor" contenteditable="true" style="min-height:220px;padding:8px;border:1px solid var(--vscode-editorWidget-border)">\n      // active line, selections, cursor, hover, indent guides, etc.\n      function demo() { console.log(\'Hello theme\'); }\n    </div>\n  </section>\n  <section class="demo" id="demo-panels" style="display:none"><div>Panels</div></section>\n  <section class="demo" id="demo-problems" style="display:none"><div>Problems list</div></section>\n  <section class="demo" id="demo-terminal" style="display:none"><div>Terminal</div></section>\n  <section class="demo" id="demo-notifications" style="display:none"><div>Notifications</div></section>\n  <section class="demo" id="demo-statusbar" style="display:none"><div>Status Bar</div></section>\n  <section class="demo" id="demo-lists" style="display:none"><div>Lists/Tabs</div></section>',document.querySelectorAll(".ptab").forEach(e=>e.addEventListener("click",()=>{document.querySelectorAll(".ptab").forEach(e=>e.classList.remove("active")),e.classList.add("active");const t=e.dataset.demo;document.querySelectorAll(".demo").forEach(e=>e.style.display="none"),document.getElementById("demo-"+t).style.display="block"}))}function o(e){return/^#([0-9a-f]{6}|[0-9a-f]{8})$/i.test(e)?`#${e.replace("#","").slice(0,6)}`:"#000000"}function s(n){const a=n.target,s=a.dataset.key;let l=a.value.trim();const d=a.parentElement,r=d.querySelector('input[type="text"][data-key="'+s+'"]'),u=d.querySelector('input[type="color"][data-key="'+s+'"]'),y=d.querySelector('input[type="range"][data-alpha-key="'+s+'"]');if("color"===a.type){const e=l,t=i(r?.value||""),n=c(e,t);r.value=n,y.value=String(t),l=n}else"text"===a.type&&/^#[0-9a-f]{6}([0-9a-f]{2})?$/i.test(l)&&(u.value=o(l),y.value=String(i(l)));t.colors[s]=l,p(),e.postMessage({type:"LOCATE",payload:{elementId:m(s)}})}function l(n){const a=n.target,o=a.dataset.alphaKey,s=a.parentElement,l=s.querySelector('input[type="color"][data-key="'+o+'"]'),i=s.querySelector('input[type="text"][data-key="'+o+'"]'),r=d(parseInt(a.value,10)),u=c(l.value,r);i.value=u,t.colors[o]=u,p(),e.postMessage({type:"LOCATE",payload:{elementId:m(o)}})}function d(e){return isFinite(e)?Math.min(100,Math.max(0,e)):100}function i(e){const t=/^#[0-9a-f]{6}([0-9a-f]{2})$/i.exec(e);if(!t)return 100;const n=parseInt(t[1],16);return Math.round(n/255*100)}function c(e,t){const n=o(e).replace("#",""),a=d(t);return`#${n}${Math.round(a/100*255).toString(16).padStart(2,"0")}`}function r(){const n=document.getElementById("panel-tokens"),a=t.tokenColors.map((e,t)=>function(e,t){const n=(e.settings.fontStyle||"").split(/\s+/).filter(Boolean),a=e=>n.includes(e);return`<div class="row">\n\t\t<label>scope</label><input data-token-edit data-index="${t}" data-field="scope" value="${Array.isArray(e.scope)?e.scope.join(", "):e.scope||""}" />\n    <label>foreground</label><input data-token-edit data-index="${t}" data-field="fg" value="${e.settings.foreground||""}" />\n\t\t<fieldset style="display:inline-flex;gap:6px;border:none;padding:0;margin:0">\n\t\t\t<label><input type="checkbox" data-fs data-index="${t}" value="bold" ${a("bold")?"checked":""}/> bold</label>\n\t\t\t<label><input type="checkbox" data-fs data-index="${t}" value="italic" ${a("italic")?"checked":""}/> italic</label>\n\t\t\t<label><input type="checkbox" data-fs data-index="${t}" value="underline" ${a("underline")?"checked":""}/> underline</label>\n\t\t\t<label><input type="checkbox" data-fs data-index="${t}" value="strikethrough" ${a("strikethrough")?"checked":""}/> strikethrough</label>\n\t\t</fieldset>\n\t\t<button data-token-remove data-index="${t}">Remove</button>\n  </div>`}(e,t)).join("");n.innerHTML=`\n\t\t<button id="add-token">Add Rule</button>\n    <div>${a}</div>`,document.getElementById("add-token").addEventListener("click",()=>{t.tokenColors.push({scope:"",settings:{}}),r(),p()}),n.querySelectorAll("[data-token-edit]").forEach(n=>n.addEventListener("input",n=>{const a=n.target,o=Number(a.dataset.index),s=a.dataset.field;"scope"===s&&(t.tokenColors[o].scope=a.value),"fg"===s&&(t.tokenColors[o].settings.foreground=a.value),"fs"===s&&(t.tokenColors[o].settings.fontStyle=a.value),p(),e.postMessage({type:"LOCATE",payload:{elementId:"demo-editor"}})})),n.querySelectorAll("[data-token-remove]").forEach(n=>n.addEventListener("click",n=>{const a=Number(n.currentTarget.dataset.index);t.tokenColors.splice(a,1),r(),p(),e.postMessage({type:"LOCATE",payload:{elementId:"demo-editor"}})})),n.querySelectorAll("[data-fs]").forEach(n=>n.addEventListener("change",n=>{const a=n.target,o=Number(a.dataset.index),s=a.value,l=(t.tokenColors[o].settings.fontStyle||"").split(/\s+/).filter(Boolean),d=new Set(l);a.checked?d.add(s):d.delete(s),t.tokenColors[o].settings.fontStyle=Array.from(d).join(" ")||void 0,p(),e.postMessage({type:"LOCATE",payload:{elementId:"demo-editor"}})}))}function u(){const e=document.getElementById("panel-semantic"),n=Object.entries(t.semanticTokens);e.innerHTML=`\n    <button id="add-sem">Add Semantic</button>\n    <div>${n.map(([e,t],n)=>function(e,t,n){const a=(t.fontStyle||"").split(/\s+/).filter(Boolean),o=e=>a.includes(e);return`<div class="row">\n    <label>selector</label><input data-sem data-index="${n}" data-field="selector" value="${e}"/>\n    <label>foreground</label><input data-sem data-index="${n}" data-field="fg" value="${t.foreground||""}"/>\n\t\t<fieldset style="display:inline-flex;gap:6px;border:none;padding:0;margin:0">\n\t\t\t<label><input type="checkbox" data-sem-fs data-index="${n}" value="bold" ${o("bold")?"checked":""}/> bold</label>\n\t\t\t<label><input type="checkbox" data-sem-fs data-index="${n}" value="italic" ${o("italic")?"checked":""}/> italic</label>\n\t\t\t<label><input type="checkbox" data-sem-fs data-index="${n}" value="underline" ${o("underline")?"checked":""}/> underline</label>\n\t\t</fieldset>\n\t\t<button data-sem-remove data-index="${n}">Remove</button>\n  </div>`}(e,t,n)).join("")}</div>`,document.getElementById("add-sem").addEventListener("click",()=>{t.semanticTokens["entity.name.new"]={},u(),p()}),e.querySelectorAll("[data-sem]").forEach(e=>e.addEventListener("input",e=>{const n=e.target,a=Number(n.dataset.index),o=Object.keys(t.semanticTokens)[a];if("selector"===n.dataset.field){const e=n.value,a=t.semanticTokens[o];delete t.semanticTokens[o],t.semanticTokens[e]=a}else"fg"===n.dataset.field?t.semanticTokens[o].foreground=n.value:"fs"===n.dataset.field&&(t.semanticTokens[o].fontStyle=n.value);p()})),e.querySelectorAll("[data-sem-remove]").forEach(e=>e.addEventListener("click",e=>{const n=Number(e.currentTarget.dataset.index),a=Object.keys(t.semanticTokens)[n];delete t.semanticTokens[a],u(),p()})),e.querySelectorAll("[data-sem-fs]").forEach(e=>e.addEventListener("change",e=>{const n=e.target,a=Number(n.dataset.index),o=Object.keys(t.semanticTokens)[a],s=(t.semanticTokens[o].fontStyle||"").split(/\s+/).filter(Boolean),l=new Set(s);n.checked?l.add(n.value):l.delete(n.value),t.semanticTokens[o].fontStyle=Array.from(l).join(" ")||void 0,p()}))}function p(){e.postMessage({type:"APPLY_PREVIEW",payload:t})}function m(e){return e.startsWith("statusBar")?"demo-statusbar":e.startsWith("panel")||e.startsWith("panelSection")?"demo-panels":e.startsWith("terminal")?"demo-terminal":e.startsWith("problems")?"demo-problems":e.startsWith("tab.")||e.startsWith("editorGroupHeader")?"demo-lists":"demo-editor"}window.addEventListener("message",e=>{const{type:o,payload:s}=e.data;if("BOOT"===o){n=s.categories||[];const e=s.settings||{};t.colors=e.colors||{},t.tokenColors=e.tokenColors?.textMateRules||[],t.semanticTokens=e.semanticTokens?.rules||{},a()}"LOAD_CURRENT"!==o&&"LOAD_IMPORTED"!==o||(t.colors=s.colors||{},t.tokenColors=s.tokenColors||[],t.semanticTokens=s.semanticTokens||{},a(),p()),"LOCATE"===o&&function(e){if(!e)return;const t=document.getElementById(e);t&&(t.classList.add("locate-pulse"),setTimeout(()=>t.classList.remove("locate-pulse"),1e3))}(s?.elementId)}),document.addEventListener("DOMContentLoaded",()=>{const t=e=>document.getElementById(e);t("btn-import")?.addEventListener("click",()=>e.postMessage({type:"REQUEST_IMPORT"})),t("btn-use")?.addEventListener("click",()=>e.postMessage({type:"REQUEST_USE_CURRENT"})),t("btn-blank")?.addEventListener("click",()=>e.postMessage({type:"REQUEST_START_BLANK"})),t("btn-export-json")?.addEventListener("click",()=>e.postMessage({type:"REQUEST_EXPORT_JSON"})),t("btn-export-css")?.addEventListener("click",()=>e.postMessage({type:"REQUEST_EXPORT_CSS"})),t("btn-export-vsix")?.addEventListener("click",()=>e.postMessage({type:"REQUEST_EXPORT_VSIX"})),document.querySelectorAll(".tab").forEach(e=>e.addEventListener("click",()=>{document.querySelectorAll(".tab").forEach(e=>e.classList.remove("active")),e.classList.add("active");const t=e.dataset.tab;document.querySelectorAll(".panel").forEach(e=>e.classList.remove("active")),document.getElementById("panel-"+t).classList.add("active")}));const n=document.getElementById("search");n.addEventListener("input",()=>{const e=n.value.toLowerCase();document.querySelectorAll("#panel-colors section").forEach(t=>{let n=!1;t.querySelectorAll(".row").forEach(t=>{const a=(t.textContent?.toLowerCase()||"").includes(e);t.style.display=a?"":"none",a&&(n=!0)}),t.style.display=n?"":"none"}),document.querySelectorAll("#panel-tokens .row").forEach(t=>{const n=t.textContent?.toLowerCase()||"";t.style.display=n.includes(e)?"":"none"}),document.querySelectorAll("#panel-semantic .row").forEach(t=>{const n=t.textContent?.toLowerCase()||"";t.style.display=n.includes(e)?"":"none"})}),e.postMessage({type:"REQUEST_BOOT"})})})();
//# sourceMappingURL=webview.js.map